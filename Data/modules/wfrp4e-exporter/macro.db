{"name":"Export Statblock to Journal","permission":{"default":0,"eKM9nHTr2M2uSgUw":3},"type":"script","flags":{"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.3sFmplIGgtI1bx0t"}},"scope":"global","command":"function replaceAll(str, find, replace) {\n    return str.replace(new RegExp(find, 'g'), replace);\n}\n\nfunction getOccurrence(array, value) {\n    var count = 0;\n    array.forEach((v) => (v === value && count++));\n    return count;\n}\n\nfunction onlyUnique(value, index, self) {\n    return self.indexOf(value) === index;\n}\n\n/* Builds a string holding all the selected actor's talent's names and numerical suffixes if appropriate. One-off Talents (e.g. Noble Blood) have no numerical suffix. */\n\nfunction outputTrappings(trappings, weapons, armour) {\n    console.log(\"--------------------------\");\n    console.log(weapons);\n    console.log(armour);\n    var trappingString = [];\n    if (trappings == null) return [];\n\n    for (var i = 0; i < weapons.length; i++) {\n        var str = weapons[i].name;\n        if (weapons[i].rangedWeaponType) {\n            str += \" (\" + weapons[i].data.range.value + \") \";\n        }\n        str += \" +\" + weapons[i].data.damage.value;\n        trappingString.push(str);\n    }\n\n    for (var j = 0; j < armour.length; j++) {\n        var str = armour[j].name + \" (\";\n        if (armour[j].data.maxAP[\"body\"] > 0) str += armour[j].data.currentAP[\"body\"] + \" Body\";\n        if (armour[j].data.maxAP[\"lArm\"] > 0) str += armour[j].data.currentAP[\"lArm\"] + \" Arms\";\n        if (armour[j].data.maxAP[\"head\"] > 0) str += armour[j].data.currentAP[\"head\"] + \" Head\";\n        if (armour[j].data.maxAP[\"lLeg\"] > 0) str += armour[j].data.currentAP[\"lLeg\"] + \" Legs\";\n        str += \")\";\n        trappingString.push(str);\n    }\n\n    trappings.forEach(function(t) {\n        trappingString.push(t.name);\n    })\n    return trappingString;\n    //return trappingString.sort();\n}\n\nfunction outputTalents(talents) {\n    var talentstring = [];\n    if (talents != null) {\n        talents.forEach(function(talent) {\n            if (talent.data.max.value != \"1\") {\n                var instances = talents.filter((i) => i.name == talent.name);\n                //\tconsole.log(instances);\n                talentstring.push(talent.name + \" \" + instances.length);\n            } else {\n                talentstring.push(talent.name);\n            }\n        })\n    }\n    return talentstring.filter(onlyUnique).sort();\n}\n\n/* Builds a string holding the actor's skills that they have at least 1 rank in, and the total for that skill. */\n\nfunction outputSkills(skills) {\n    var skillstring = [];\n    if (skills != null) {\n        skills.forEach(function(skill) {\n            console.log(skill);\n            if (skill.data.advances.value != \"0\") {\n                skillstring.push(skill.name + \" \" + skill.data.total.value);\n            }\n        })\n    }\n    return skillstring.sort();\n}\n\n/* Output monster/NPC traits. */\n\nfunction outputTraits(traits) {\n    var traitsstring = \"\";\n    if (traits != null) {\n        traits.forEach(function(trait) {\n            if (traitsstring != \"\") traitsstring += \", \";\n            traitsstring += trait.name;\n        })\n    }\n    return traitsstring;\n}\n\n/* Output spells */\nfunction outputSpells(spells) {\n    var spellString = [];\n    for (var i = 0; i < spells.length; i++) {\n        console.log(\"spell \" + i);\n        spellString.push(\"<em>\" + spells[i].name + \"</em>\");\n    }\n    return spellString.sort();\n}\n\n/* Output spells */\nfunction convertToStats(actor) {\n\n    var prep = actor.prepare();\n    console.log(\"------------\");\n\n\n    var weapons = prep.weapons;\n    var armour = prep.armour;\n\n    console.log(weapons);\n    console.log(\"------------\");\n\n    var char1 = \"<td align=\\\"center\\\">\";\n    var char2 = \"</td>\";\n    var output;\n\n    output = \"<h1>\" + actor.name;\n    var st = actor.data.data.details.status.value;\n\n    if (st != null && st != \"\")\n        output += \" (\" + st + \")\";\n    console.log(st);\n    output += \"</h1>\";\n    output += \"<table border=\\\"1\\\" class=\\\"exportOutput\\\"><tr><th style=\\\"width:8%;\\\">M</th><th style=\\\"width:8%;\\\">WS</th><th style=\\\"width:8%;\\\">BS</th><th style=\\\"width:8%;\\\">S</th><th style=\\\"width:8%;\\\">T</th><th style=\\\"width:8%;\\\">I</th><th style=\\\"width:8%;\\\">Ag</th><th style=\\\"width:8%;\\\">Dex</th><th style=\\\"width:8%;\\\">Int</th><th style=\\\"width:8%;\\\">WP</th><th style=\\\"width:8%;\\\">Fel</th><th style=\\\"width:8%;\\\">W</th></tr><tr>\";\n\n    output += char1 + prep.data.details.move.value + char2;\n    output += char1 + prep.data.characteristics.ws.value + char2;\n    output += char1 + prep.data.characteristics.bs.value + char2;\n    output += char1 + prep.data.characteristics.s.value + char2;\n    output += char1 + prep.data.characteristics.t.value + char2;\n    output += char1 + prep.data.characteristics.i.value + char2;\n    output += char1 + prep.data.characteristics.ag.value + char2;\n    output += char1 + prep.data.characteristics.dex.value + char2;\n    output += char1 + prep.data.characteristics.int.value + char2;\n    output += char1 + prep.data.characteristics.wp.value + char2;\n    output += char1 + prep.data.characteristics.fel.value + char2;\n    output += char1 + prep.data.status.wounds.value + char2;\n\n\n    output += \"</tr></table>\";\n\n    const skills = prep.basicSkills.concat(prep.advancedOrGroupedSkills);\n    const talents = actor.data.items.filter((i) => i.type === \"talent\");\n    const traits = prep.traits;\n    const trappings = actor.data.items.filter((i) => i.type === \"trapping\" || i.type === \"container\" || i.type === \"ammunition\");\n    const spells = prep.grimoire;\n\n\n    console.log(\"##################\");\n    console.log(spells);\n\n\n    var skillsString = outputSkills(skills);\n    var talentsString = outputTalents(talents);\n    var traitsString = outputTraits(traits);\n    var trappingString = outputTrappings(trappings, weapons, armour);\n    var spellString = outputSpells(spells);\n\n    if (skillsString != null && skillsString != \"\")\n        output += \"<p><strong>Skills:</strong> \" + replaceAll(skillsString.toString(), \",\", \", \") + \"<p>\";\n    if (talentsString != null && talentsString != \"\")\n        output += \"<p><strong>Talents:</strong> \" + replaceAll(talentsString.toString(), \",\", \", \") + \"<p>\";\n    if (traitsString != null && traitsString != \"\")\n        output += \"<p><strong>Traits:</strong> \" + traitsString + \"<p>\";\n    if (trappingString != null && trappingString != \"\")\n        output += \"<p><strong>Trappings:</strong> \" + replaceAll(trappingString.toString(), \",\", \", \") + \"<p>\";\n    if (spellString != null && spellString != \"\")\n        output += \"<p><strong>Spells:</strong> \" + replaceAll(spellString.toString(), \",\", \", \") + \"<p>\";\n\n\n    let chatData = {\n        user: game.user._id,\n        content: output\n    };\n    return output;\n}\n\n/* Given an actor make a JournalEntry for their stats. */\n\nfunction doConversion(exportActor) {\n    var filename = exportActor.name + \" export\";\n    var existing = game.journal.entities.find(e => e.name == filename);\n    if (existing != null) {\n        existing.delete();\n    }\n    let content = convertToStats(exportActor);\n    var j = JournalEntry.create({\n        name: filename,\n        content: `${content}`\n    });\n    ui.notifications.notify(\"Actor Converted Successfully. Check Journals for \" + filename);\n}\n\n/* Main code */\nvar actorToConvert = null;\nvar selectedToken = canvas.tokens.controlled[0];\nif (selectedToken != null || canvas.tokens.controlled.length > 1) {\n    actorToConvert = selectedToken.actor;\n    doConversion(actorToConvert);\n} else {\n    var output = \"<p>Please select a statblock.</p><form><div class=\\\"form-group\\\"><select id=\\\"export-choice\\\" name=\\\"selectedActor\\\">\";\n    let options = Array.from(game.actors);\n    for (var i = 0; i < options.length; i++) {\n        var currActor = options[i];\n        output += \"<option value=\\\"\" + i + \"\\\">\" + currActor.name + \"</option>\";\n    }\n    output += \"</select></form>\";\n    var exporting = false;\n    let d = new Dialog({\n        title: \"Export WFRP 4E Statblock\",\n        content: output,\n        buttons: {\n            one: {\n                icon: '<i class=\"fas fa-check\"></i>',\n                label: \"Export to Journal\",\n                callback: () => exporting = true\n            }\n        },\n        default: \"two\",\n        render: html => console.log(\"Register interactivity in the rendered dialog\"),\n        close: html => {\n            if (exporting) {\n                var actorNumber = html.find('[name=selectedActor]')[0].value;\n                doConversion(options[actorNumber]);\n            }\n        }\n    });\n    d.render(true);\n}","author":"eKM9nHTr2M2uSgUw","img":"modules/wfrp4e-exporter/quill.svg","actorIds":[],"_id":"NNWE0z2MqvAIShu2"}
