{"version":3,"file":"healthEstimate.js","sources":["../../src/module/utils.js","../../src/module/HealthMonitor.js","../../src/module/injectConfig.js","../../src/module/hooks.js","../../src/module/providers/templates/Base.js","../../src/module/providers/CoC7.js","../../src/module/providers/D35E.js","../../src/module/providers/a5e.js","../../src/module/providers/age-system.js","../../src/module/providers/alienrpg.js","../../src/module/providers/archmage.js","../../src/module/providers/band-of-blades.js","../../src/module/providers/blade-runner.js","../../src/module/providers/blades-in-the-dark.js","../../src/module/providers/custom-system-builder.js","../../src/module/providers/cyberpunk-red-core.js","../../src/module/providers/cyphersystem.js","../../src/module/providers/dnd4e.js","../../src/module/providers/dnd5e.js","../../src/module/providers/ds4.js","../../src/module/providers/dsa5.js","../../src/module/providers/dungeonworld.js","../../src/module/providers/forbidden-lands.js","../../src/module/providers/foundryvtt-reve-de-dragon.js","../../src/module/providers/lancer.js","../../src/module/providers/monsterweek.js","../../src/module/providers/numenera.js","../../src/module/providers/od6s.js","../../src/module/providers/ose.js","../../src/module/providers/pbta.js","../../src/module/providers/pf1.js","../../src/module/providers/pf2e.js","../../src/module/providers/ryuutama.js","../../src/module/providers/scum-and-villainy.js","../../src/module/providers/sfrpg.js","../../src/module/providers/shadowrun5e.js","../../src/module/providers/splittermond.js","../../src/module/providers/starwarsffg.js","../../src/module/providers/swade.js","../../src/module/providers/swnr.js","../../src/module/providers/symbaroum.js","../../src/module/providers/t2k4e.js","../../src/module/providers/templates/Generic.js","../../src/module/providers/tor2e.js","../../src/module/providers/tormenta20.js","../../src/module/providers/trpg.js","../../src/module/providers/twodsix.js","../../src/module/providers/uesrpg-d100.js","../../src/module/providers/weirdwizard.js","../../src/module/providers/wfrp4e.js","../../src/module/providers/worldbuilding.js","../../src/module/providers/wrath-and-glory.js","../../src/module/providers/yzecoriolis.js","../../src/module/providers/_shared.js","../../src/module/forms/templates/BaseV2.js","../../src/module/forms/BehaviorSettings.js","../../src/module/forms/templates/Base.js","../../src/module/forms/EstimationSettings.js","../../src/module/forms/StyleSettings.js","../../src/module/settings.js","../../src/module/logic.js","../../src/module/healthEstimate.js"],"sourcesContent":["/**\n * Shorthand for game.settings.register().\n * Default data: {scope: \"world\", config: true}\n * @function addSetting\n * @param {string} key\n * @param {object} data\n */\nexport function addSetting(key, data) {\n\tconst commonData = {\n\t\tname: t(`${key}.name`),\n\t\thint: t(`${key}.hint`),\n\t\tscope: \"world\",\n\t\tconfig: true,\n\t};\n\tgame.settings.register(\"healthEstimate\", key, Object.assign(commonData, data));\n}\n\n/**\n * Shorthand for game.settings.register().\n * Default data: {scope: \"world\", config: false}\n * @function addSetting\n * @param {string} key\n * @param {object} data\n */\nexport function addMenuSetting(key, data) {\n\tconst commonData = {\n\t\tname: t(`${key}.name`),\n\t\thint: t(`${key}.hint`),\n\t\tscope: \"world\",\n\t\tconfig: false,\n\t};\n\tgame.settings.register(\"healthEstimate\", key, Object.assign(commonData, data));\n}\n\n/**\n * Check whether the entry is an empty string or a falsey value\n * @param string\n * @returns {boolean}\n */\nexport function isEmpty(string) {\n\treturn !string || string.length === 0 || /^\\s*$/.test(string);\n}\n\n/**\n * Shorthand for game.i18n.localize()\n * @param {string} key\n * @returns {string}\n */\nexport function t(key) {\n\treturn game.i18n.localize(`healthEstimate.${key}`);\n}\n/**\n * Shorthand for game.i18n.format()\n * @param {string} key\n * @param {object} data\n * @returns {string}\n */\nexport function f(key, data = {}) {\n\treturn game.i18n.format(`healthEstimate.${key}`, data);\n}\n\n/**\n * Shorthand for game.settings.set\n * @param {string} key\n * @param value\n */\nexport async function sSet(key, value) {\n\tawait game.settings.set(\"healthEstimate\", key, value);\n}\n\n/**\n * Shorthand for game.settings.get\n * @param {string} key\n * @returns {any}\n */\nexport function sGet(key) {\n\treturn game.settings.get(\"healthEstimate\", key);\n}\n\n/**\n * Shorthand for game.settings.settings.get\n * @param {string} key\n * @returns {Object}\n */\nexport function settingData(key) {\n\treturn game.settings.settings.get(`healthEstimate.${key}`);\n}\n\nexport function disableCheckbox(checkbox, boolean) {\n\tcheckbox.prop(\"disabled\", !boolean);\n}\n\n/**\n * Repositions the token's elevation tooltip.\n * @param {Token} token \tThe token being refreshed\n * @param {Boolean} force \tFlag that enforces the default position. It is meant to avoid conflict with any modules that change the value.\n */\nexport function repositionTooltip(token, force = false) {\n\tconst tooltipPosition = game.healthEstimate.tooltipPosition;\n\tconst docWidth = token.document.width;\n\tconst { width } = token.getSize();\n\tconst offset = 0.35 / Math.max(1, docWidth);\n\tif (tooltipPosition === \"left\") token.tooltip.x = width * (-offset);\n\telse if (force && tooltipPosition === \"default\") token.tooltip.x = width / 2;\n\telse if (tooltipPosition === \"right\") token.tooltip.x = width * (1 + offset);\n}\n","import { f, sGet } from \"../module/utils.js\";\n\n// Modified code from Health Monitor by Jesse Vo (jessev14)\n// License: MIT\n\n/**\n *\n * @param {Token} token\n */\nfunction getActorHealth(token) {\n\ttry {\n\t\tconst fraction = Number(game.healthEstimate.getFraction(token));\n\t\tconst { estimate, index } = game.healthEstimate.getStage(token, fraction);\n\t\tconst isDead = game.healthEstimate.isDead(token, estimate.value);\n\t\tif (isDead) {\n\t\t\testimate.label = game.healthEstimate.deathStateName;\n\t\t}\n\n\t\treturn { estimate, index, isDead };\n\t} catch(err) {\n\t\tconsole.error(\n\t\t\t`Health Estimate | Error on function getActorHealth(). Token Name: \"${token.name}\". ID: \"${token.id}\". Type: \"${token.document.actor.type}\".`,\n\t\t\terr\n\t\t);\n\t\treturn {};\n\t}\n}\n\n/**\n *\n * @param {Token} token\n */\nexport function addCharacter(token) {\n\tconst breakCondition = game.healthEstimate.breakOverlayRender(token);\n\tif (breakCondition || typeof breakCondition === \"undefined\") {\n\t\treturn;\n\t}\n\tconst { estimate, index, isDead } = getActorHealth(token);\n\tif (estimate) {\n\t\tgame.healthEstimate.actorsCurrentHP[token.id] = {\n\t\t\tname: token.document.name || token.name,\n\t\t\tstage: { estimate, index },\n\t\t\tdead: isDead,\n\t\t};\n\t}\n}\n\n/**\n *\n * @param {Token} token\n */\nexport function outputStageChange(token) {\n\t// Get the last data state\n\tconst actorData = game.healthEstimate.actorsCurrentHP[token.id];\n\tconst oldStage = actorData.stage;\n\n\t// Get the new data state\n\tconst { estimate, index, isDead } = getActorHealth(token);\n\n\t// Update data state if needed\n\tif (index !== oldStage.index || isDead || actorData.dead !== isDead) {\n\t\tactorData.stage = { estimate, index };\n\t\tactorData.dead = isDead;\n\t}\n\n\tlet name = actorData.name;\n\tif (game.cub && game.cub.hideNames.shouldReplaceName(token.actor)) {\n\t\tname = game.cub.hideNames.getReplacementName(token.actor);\n\t} else if (\n\t\tgame.modules.get(\"xdy-pf2e-workbench\")?.active\n\t\t&& game.settings.get(\"xdy-pf2e-workbench\", \"npcMystifier\")\n\t\t&& game.settings.get(\"healthEstimate\", \"PF2E.workbenchMystifier\")\n\t\t&& token.name !== (token?.actor?.prototypeToken.name ?? \"\")\n\t\t&& !token.actor.hasPlayerOwner\n\t) {\n\t\tname = token?.name;\n\t} else if (\n\t\ttoken.document.getFlag(\"healthEstimate\", \"hideName\")\n\t\t&& [0, 10, 20, 40].includes(token.document.displayName)\n\t\t&& !token.actor.hasPlayerOwner\n\t) {\n\t\tname = sGet(\"core.unknownEntity\");\n\t}\n\tconst css = index > oldStage.index ? \"<span class='hm_messageheal'>\" : \"<span class='hm_messagetaken'>\";\n\n\t// Output change if label isn't empty and is different from the last, for the case where\n\t// the same stage is used for different fractions e.g. \"Unconscious, Bloodied, Hurt, Hurt, Injured\"\n\tif (estimate.label && estimate.label !== oldStage.estimate.label) {\n\t\tconst chatData = {\n\t\t\tcontent: `${css + f(\"core.isNow\", { name, desc: estimate.label })}</span>`,\n\t\t};\n\t\tChatMessage.create(chatData, {});\n\t}\n}\n","// injectConfig library by @theripper93\n// License: MIT\n// Documentation: https://github.com/theripper93/injectConfig\n\nexport var injectConfig = {\n\tinject: function injectConfig(app, html, data, object) {\n\t\tthis._generateTabStruct(app, html, data, object);\n\t\tconst tabSize = data.tab?.width ?? 100;\n\t\tobject = object || app.object;\n\t\tconst moduleId = data.moduleId;\n\t\tlet injectPoint;\n\t\tif (typeof data.inject === \"string\") {\n\t\t\tinjectPoint = html.find(data.inject).first().closest(\".form-group\");\n\t\t} else {\n\t\t\tinjectPoint = data.inject;\n\t\t}\n\t\tinjectPoint = injectPoint\n\t\t\t? $(injectPoint)\n\t\t\t: data.tab\n\t\t\t? html.find(\".tab\").last()\n\t\t\t: html.find(\".form-group\").last();\n\t\tlet injectHtml = \"\";\n\t\tfor (const [k, v] of Object.entries(data)) {\n\t\t\tif (k === \"moduleId\" || k === \"inject\" || k === \"tab\") continue;\n\t\t\tconst elemData = data[k];\n\t\t\tconst flag = `flags.${moduleId}.${k || \"\"}`;\n\t\t\tconst flagValue = object?.getFlag(moduleId, k) ?? elemData.default ?? getDefaultFlag(k);\n\t\t\tconst notes = v.notes ? `<p class=\"notes\">${v.notes}</p>` : \"\";\n\t\t\tv.label = v.units ? `${v.label}<span class=\"units\"> (${v.units})</span>` : v.label;\n\t\t\tswitch (elemData.type) {\n\t\t\t\tcase \"text\":\n\t\t\t\t\tinjectHtml += `<div class=\"form-group\">\n                        <label for=\"${k}\">${v.label || \"\"}</label>\n                            <input type=\"text\" name=\"${flag}\" value=\"${flagValue}\" placeholder=\"${\n\t\t\t\t\t\tv.placeholder || \"\"\n\t\t\t\t\t}\">${notes}\n                    </div>`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"number\":\n\t\t\t\t\tinjectHtml += `<div class=\"form-group\">\n                        <label for=\"${k}\">${v.label || \"\"}</label>\n                            <input type=\"number\" name=\"${flag}\" min=\"${v.min}\" max=\"${v.max}\" step=\"${\n\t\t\t\t\t\tv.step ?? 1\n\t\t\t\t\t}\" value=\"${flagValue}\" placeholder=\"${v.placeholder || \"\"}\">${notes}\n                    </div>`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"checkbox\":\n\t\t\t\t\tinjectHtml += `<div class=\"form-group\">\n                        <label for=\"${k}\">${v.label || \"\"}</label>\n                            <input type=\"checkbox\" name=\"${flag}\" ${flagValue ? \"checked\" : \"\"}>${notes}\n                    </div>`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"select\":\n\t\t\t\t\tinjectHtml += `<div class=\"form-group\">\n                        <label for=\"${k}\">${v.label || \"\"}</label>\n                            <select name=\"${flag}\">`;\n\t\t\t\t\tfor (const [i, j] of Object.entries(v.options)) {\n\t\t\t\t\t\tinjectHtml += `<option value=\"${i}\" ${flagValue === i ? \"selected\" : \"\"}>${j}</option>`;\n\t\t\t\t\t}\n\t\t\t\t\tinjectHtml += `</select>${notes}\n                    </div>`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"range\":\n\t\t\t\t\tinjectHtml += `<div class=\"form-group\">\n                        <label for=\"${k}\">${v.label || \"\"}</label>\n                        <div class=\"form-fields\">\n                            <input type=\"range\" name=\"${flag}\" value=\"${flagValue}\" min=\"${v.min}\" max=\"${\n\t\t\t\t\t\tv.max\n\t\t\t\t\t}\" step=\"${v.step ?? 1}\">\n                            <span class=\"range-value\">${flagValue}</span>${notes}\n                        </div>\n                    </div>`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"color\":\n\t\t\t\t\tinjectHtml += `<div class=\"form-group\">\n                        <label for=\"${k}\">${v.label || \"\"}</label>\n                        <div class=\"form-fields\">\n                            <input class=\"color\" type=\"text\" name=\"${flag}\" value=\"${flagValue}\">\n                            <input type=\"color\" data-edit=\"${flag}\" value=\"${flagValue}\">\n                        </div>\n                        ${notes}\n                    </div>`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"custom\":\n\t\t\t\t\tinjectHtml += v.html;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (elemData.type?.includes(\"filepicker\")) {\n\t\t\t\tconst fpType = elemData.type.split(\".\")[1] || \"imagevideo\";\n\t\t\t\tinjectHtml += `<div class=\"form-group\">\n                <label for=\"${k}\">${v.label || \"\"}</label>\n                <div class=\"form-fields\">     \n                    <button type=\"button\" class=\"file-picker\" data-extras=\"${\n\t\t\t\t\t\telemData.fpTypes ? elemData.fpTypes.join(\",\") : \"\"\n\t\t\t\t\t}\" data-type=\"${fpType}\" data-target=\"${flag}\" title=\"Browse Files\" tabindex=\"-1\">\n                        <i class=\"fas fa-file-import fa-fw\"></i>\n                    </button>\n                    <input class=\"image\" type=\"text\" name=\"${flag}\" placeholder=\"${\n\t\t\t\t\tv.placeholder || \"\"\n\t\t\t\t}\" value=\"${flagValue}\">\n                </div>${notes}\n            </div>`;\n\t\t\t}\n\t\t}\n\t\tinjectHtml = $(injectHtml);\n\t\tinjectHtml.on(\"click\", \".file-picker\", this.fpTypes, _bindFilePicker);\n\t\tinjectHtml.on(\"change\", \"input[type=\\\"color\\\"]\", _colorChange);\n\t\tif (data.tab) {\n\t\t\tconst injectTab = createTab(data.tab.name, data.tab.label, data.tab.icon).append(injectHtml);\n\t\t\tinjectPoint.after(injectTab);\n\t\t\tapp?.setPosition({ height: \"auto\", width: data.tab ? app.options.width + tabSize : \"auto\" });\n\t\t\treturn injectHtml;\n\t\t}\n\t\tinjectPoint.after(injectHtml);\n\t\tif (app) app?.setPosition({ height: \"auto\", width: data.tab ? app.options.width + tabSize : \"auto\" });\n\t\treturn injectHtml;\n\n\t\tfunction createTab(name, label, icon) {\n\t\t\t/* let tabs = html.find(\".sheet-tabs\").last();\n            if(!tabs.length) tabs = html.find(`nav[data-group=\"main\"]`);*/\n\t\t\tconst tabs = html.find(\".sheet-tabs\").first().find(\".item\").last();\n\t\t\tconst tab = `<a class=\"item\" data-tab=\"${name}\"><i class=\"${icon}\"></i> ${label}</a>`;\n\t\t\ttabs.after(tab);\n\t\t\tconst tabContainer = `<div class=\"tab\" data-tab=\"${name}\"></div>`;\n\t\t\treturn $(tabContainer);\n\t\t}\n\n\t\tfunction getDefaultFlag(inputType) {\n\t\t\tswitch (inputType) {\n\t\t\t\tcase \"number\":\n\t\t\t\t\treturn 0;\n\t\t\t\tcase \"checkbox\":\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn \"\";\n\t\t}\n\n\t\tfunction _colorChange(e) {\n\t\t\tconst input = $(e.target);\n\t\t\tconst edit = input.data(\"edit\");\n\t\t\tconst value = input.val();\n\t\t\tinjectHtml.find(`input[name=\"${edit}\"]`).val(value);\n\t\t}\n\n\t\tfunction _bindFilePicker(event) {\n\t\t\tevent.preventDefault();\n\t\t\tconst button = event.currentTarget;\n\t\t\tconst input = $(button).closest(\".form-fields\").find(\"input\") || null;\n\t\t\tconst extraExt = button.dataset.extras ? button.dataset.extras.split(\",\") : [];\n\t\t\tconst options = {\n\t\t\t\tfield: input[0],\n\t\t\t\ttype: button.dataset.type,\n\t\t\t\tcurrent: input.val() || null,\n\t\t\t\tbutton: button,\n\t\t\t};\n\t\t\tconst fp = new FilePicker(options);\n\t\t\tfp.extensions ? fp.extensions.push(...extraExt) : (fp.extensions = extraExt);\n\t\t\treturn fp.browse();\n\t\t}\n\t},\n\tquickInject: function quickInject(injectData, data) {\n\t\tinjectData = Array.isArray(injectData) ? injectData : [injectData];\n\t\tfor (const doc of injectData) {\n\t\t\tlet newData = data;\n\t\t\tif (doc.inject) {\n\t\t\t\tnewData = JSON.parse(JSON.stringify(data));\n\t\t\t\tdata.inject = doc.inject;\n\t\t\t}\n\t\t\tHooks.on(`render${doc.documentName}Config`, (app, html) => {\n\t\t\t\tinjectConfig.inject(app, html, newData);\n\t\t\t});\n\t\t}\n\t},\n\t_generateTabStruct: function _generateTabStruct(app, html, data, object) {\n\t\tconst isTabs = html.find(\".sheet-tabs\").length;\n\t\tconst useTabs = data.tab;\n\t\tif (isTabs || !useTabs) return;\n\t\tconst tabSize = data.tab?.width || 100;\n\t\tconst layer = app?.object?.layer?.options?.name;\n\t\tconst icon = $(\".main-controls\").find(`li[data-canvas-layer=\"${layer}\"]`).find(\"i\").attr(\"class\");\n\n\t\tconst $tabs = $(`<nav class=\"sheet-tabs tabs\">\n        <a class=\"item active\" data-tab=\"basic\"><i class=\"${icon}\"></i> ${game.i18n.localize(\"LIGHT.HeaderBasic\")}</a>\n        </nav>\n        <div class=\"tab active\" data-tab=\"basic\"></div>`);\n\t\t// move all content of form into tab\n\t\tconst form = html.find(\"form\").first();\n\t\tform.children().each((i, e) => {\n\t\t\t$($tabs[2]).append(e);\n\t\t});\n\n\t\tform.append($tabs);\n\t\tconst submitButton = html.find(\"button[type='submit']\").first();\n\t\tform.append(submitButton);\n\n\t\thtml.on(\"click\", \".item\", (e) => {\n\t\t\thtml.find(\".item\").removeClass(\"active\");\n\t\t\t$(e.currentTarget).addClass(\"active\");\n\t\t\thtml.find(\".tab\").removeClass(\"active\");\n\t\t\thtml.find(`[data-tab=\"${e.currentTarget.dataset.tab}\"]`).addClass(\"active\");\n\t\t\tapp.setPosition({ height: \"auto\", width: data.tab ? app.options.width + tabSize : \"auto\" });\n\t\t});\n\t},\n};\n","import { addCharacter, outputStageChange } from \"./HealthMonitor.js\";\nimport { injectConfig } from \"./injectConfig.js\";\nimport { disableCheckbox, f, repositionTooltip, sGet, t } from \"./utils.js\";\n\nexport class HealthEstimateHooks {\n\tstatic canvasInit(canvas) {\n\t\tgame.healthEstimate.combatRunning = game.healthEstimate.isCombatRunning();\n\t\tgame.healthEstimate.lastZoom = null;\n\t}\n\n\tstatic onceCanvasReady() {\n\t\tgame.healthEstimate.combatOnly = sGet(\"core.combatOnly\");\n\t\tgame.healthEstimate.alwaysShow = sGet(\"core.alwaysShow\");\n\t\tgame.healthEstimate.combatRunning = game.healthEstimate.isCombatRunning();\n\t\tHooks.on(\"refreshToken\", HealthEstimateHooks.refreshToken);\n\t\tif (game.healthEstimate.alwaysShow) {\n\t\t\tcanvas.tokens?.placeables.forEach((token) => game.healthEstimate._handleOverlay(token, true));\n\t\t}\n\t\tif (game.healthEstimate.scaleToZoom) Hooks.on(\"canvasPan\", HealthEstimateHooks.onCanvasPan);\n\t\tHooks.on(\"canvasInit\", HealthEstimateHooks.canvasInit);\n\t}\n\n\t/**\n\t * HP storing code for canvas load or token created\n\t */\n\tstatic onCanvasReady() {\n\t\t/** @type {[Token]} */\n\t\tconst tokens = canvas.tokens?.placeables.filter((e) => e.actor) ?? [];\n\t\ttokens.forEach(addCharacter);\n\n\t\tif (game.healthEstimate.alwaysShow) {\n\t\t\tcanvas.tokens?.placeables.forEach((token) => {\n\t\t\t\tgame.healthEstimate._handleOverlay(token, true);\n\t\t\t});\n\t\t}\n\t}\n\n\tstatic onCanvasPan(canvas, constrained) {\n\t\tconst scale = () => {\n\t\t\tconst zoomLevel = Math.min(1, canvas.stage.scale.x);\n\t\t\tif (game.healthEstimate.lastZoom !== zoomLevel) {\n\t\t\t\tcanvas.tokens?.placeables\n\t\t\t\t\t.filter((t) => t.healthEstimate?.visible)\n\t\t\t\t\t.forEach((token) => {\n\t\t\t\t\t\tif (token.healthEstimate?._texture) {\n\t\t\t\t\t\t\ttoken.healthEstimate.style.fontSize = game.healthEstimate.scaledFontSize;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tgame.healthEstimate.lastZoom = zoomLevel;\n\t\t};\n\t\tif (game.healthEstimate.alwaysShow) {\n\t\t\tif (this.timeout) clearTimeout(this.timeout);\n\t\t\tthis.timeout = setTimeout(scale, 100);\n\t\t} else scale();\n\t}\n\n\tstatic onCreateToken(tokenDocument, options, userId) {\n\t\tif (tokenDocument.object) addCharacter(tokenDocument.object);\n\t}\n\n\t// /////////\n\t// ACTOR //\n\t// /////////\n\n\tstatic onUpdateActor(actor, data, options, userId) {\n\t\tif (game.healthEstimate.alwaysShow) {\n\t\t\t// Get all the tokens because there can be two tokens of the same linked actor.\n\t\t\tconst tokens = canvas.tokens?.placeables.filter((token) => token?.actor?.id === actor.id);\n\t\t\t// Call the _handleOverlay method for each token.\n\t\t\ttokens?.forEach((token) => game.healthEstimate._handleOverlay(token, true));\n\t\t}\n\t\tif (game.healthEstimate.outputChat && game.users.activeGM?.isSelf) {\n\t\t\t// Find a single token associated with the updated actor.\n\t\t\tconst token = canvas.tokens?.placeables.find((token) => token?.actor?.id === actor.id);\n\t\t\tif (token) {\n\t\t\t\tconst tokenId = token?.id;\n\t\t\t\tconst tokenHP = game.healthEstimate.actorsCurrentHP?.[tokenId];\n\t\t\t\tif (\n\t\t\t\t\ttokenId\n\t\t\t\t\t&& tokenHP\n\t\t\t\t\t&& !game.healthEstimate.breakOverlayRender(token)\n\t\t\t\t\t&& !game.healthEstimate.hideEstimate(token)\n\t\t\t\t) {\n\t\t\t\t\toutputStageChange(token);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic deleteActor(actorDocument, options, userId) {\n\t\tlet tokens = canvas.tokens?.placeables.filter((e) => e.document.actorId === actorDocument.id);\n\t\ttokens.forEach((token) => token.refresh());\n\t}\n\n\tstatic deleteActiveEffect(activeEffect, options, userId) {\n\t\tif (activeEffect.img === game.healthEstimate.deathMarker) {\n\t\t\tlet tokens = canvas.tokens?.placeables.filter((e) => e.actor && e.actor.id === activeEffect.parent.id);\n\t\t\tfor (let token of tokens) {\n\t\t\t\tif (token.document.flags?.healthEstimate?.dead) token.document.unsetFlag(\"healthEstimate\", \"dead\");\n\t\t\t}\n\t\t}\n\t}\n\n\t// /////////\n\t// TOKEN //\n\t// /////////\n\n\tstatic refreshToken(token, flags) {\n\t\tgame.healthEstimate._handleOverlay(token, game.healthEstimate.showCondition(token.hover));\n\t\tif (flags.refreshSize && game.healthEstimate.tooltipPosition) repositionTooltip(token);\n\t}\n\n\tstatic onCombatStart(combat, updateData) {\n\t\tif (!game.healthEstimate.combatOnly) return;\n\t\tgame.healthEstimate.combatRunning = true;\n\t\tcanvas.tokens?.placeables.forEach((token) => {\n\t\t\tgame.healthEstimate._handleOverlay(token, game.healthEstimate.showCondition(token.hover));\n\t\t});\n\t}\n\n\tstatic onUpdateCombat(combat, options, userId) {\n\t\tif (!game.healthEstimate.combatOnly) return;\n\t\tgame.healthEstimate.combatRunning = game.healthEstimate.isCombatRunning();\n\t\tcanvas.tokens?.placeables.forEach((token) => {\n\t\t\tgame.healthEstimate._handleOverlay(token, game.healthEstimate.showCondition(token.hover));\n\t\t});\n\t}\n\n\t// /////////////\n\t// RENDERING //\n\t// /////////////\n\n\t/**\n\t * Chat Styling\n\t */\n\tstatic onRenderChatMessage(app, html, data) {\n\t\tif (html.find(\".hm_messageheal\").length) html.addClass(\"hm_message hm_messageheal\");\n\t\telse if (html.find(\".hm_messagetaken\").length) html.addClass(\"hm_message hm_messagetaken\");\n\t}\n\n\t/**\n\t * Handler called when token configuration window is opened. Injects custom form html and deals\n\t * with updating token.\n\t * @category GMOnly\n\t * @function\n\t * @async\n\t * @param {SettingsConfig} settingsConfig\n\t * @param {JQuery} html\n\t */\n\tstatic renderSettingsConfigHandler(settingsConfig, html) {\n\t\t// Chat Output setting changes\n\t\tconst outputChat = game.settings.get(\"healthEstimate\", \"core.outputChat\");\n\t\tconst outputChatCheckbox = html.find('input[name=\"healthEstimate.core.outputChat\"]');\n\t\tconst unknownEntityInput = html.find('input[name=\"healthEstimate.core.unknownEntity\"]');\n\t\tdisableCheckbox(unknownEntityInput, outputChat);\n\t\toutputChatCheckbox.on(\"change\", (event) => {\n\t\t\tdisableCheckbox(unknownEntityInput, event.target.checked);\n\t\t});\n\n\t\t// Additional PF1 system settings\n\t\tif (game.settings.settings.has(\"healthEstimate.PF1.showExtra\")) {\n\t\t\tconst showExtra = game.settings.get(\"healthEstimate\", \"PF1.showExtra\");\n\t\t\tconst showExtraCheckbox = html.find('input[name=\"healthEstimate.PF1.showExtra\"]');\n\t\t\tconst disabledNameInput = html.find('input[name=\"healthEstimate.PF1.disabledName\"]');\n\t\t\tconst dyingNameInput = html.find('input[name=\"healthEstimate.PF1.dyingName\"]');\n\t\t\tdisableCheckbox(disabledNameInput, showExtra);\n\t\t\tdisableCheckbox(dyingNameInput, showExtra);\n\n\t\t\tshowExtraCheckbox.on(\"change\", (event) => {\n\t\t\t\tdisableCheckbox(disabledNameInput, event.target.checked);\n\t\t\t\tdisableCheckbox(dyingNameInput, event.target.checked);\n\t\t\t});\n\t\t}\n\n\t\t// Additional PF2e system settings\n\t\tif (game.settings.settings.has(\"healthEstimate.PF2E.workbenchMystifier\")) {\n\t\t\tconst workbenchMystifierCheckbox = html.find('input[name=\"healthEstimate.PF2E.workbenchMystifier\"]');\n\t\t\tdisableCheckbox(workbenchMystifierCheckbox, outputChat);\n\n\t\t\toutputChatCheckbox.on(\"change\", (event) => {\n\t\t\t\tdisableCheckbox(workbenchMystifierCheckbox, event.target.checked);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Handler called when token configuration window is opened. Injects custom form html and deals\n\t * with updating token.\n\t * @category GMOnly\n\t * @function\n\t * @async\n\t * @param {TokenConfig} tokenConfig\n\t * @param {JQuery} html\n\t */\n\tstatic async renderTokenConfigHandler(tokenConfig, html) {\n\t\tconst moduleId = \"healthEstimate\";\n\t\tconst tab = {\n\t\t\tname: moduleId,\n\t\t\tlabel: \"Estimates\",\n\t\t\ticon: \"fas fa-scale-balanced\",\n\t\t};\n\t\tinjectConfig.inject(tokenConfig, html, { moduleId, tab }, tokenConfig.object);\n\n\t\tconst posTab = html.find(`.tab[data-tab=\"${moduleId}\"]`);\n\t\tconst tokenFlags = tokenConfig.options.sheetConfig\n\t\t\t? tokenConfig.object.flags?.healthEstimate\n\t\t\t: tokenConfig.token.flags?.healthEstimate;\n\n\t\tconst data = {\n\t\t\thasPlayerOwner: tokenConfig.token.hasPlayerOwner,\n\t\t\thideHealthEstimate: tokenFlags?.hideHealthEstimate ? \"checked\" : \"\",\n\t\t\thideName: tokenFlags?.hideName ? \"checked\" : \"\",\n\t\t\tdontMarkDead: tokenFlags?.dontMarkDead ? \"checked\" : \"\",\n\t\t\tdontMarkDeadHint: f(\"core.keybinds.dontMarkDead.hint\", { setting: t(\"core.NPCsJustDie.name\") }),\n\t\t\thideNameHint: f(\"core.keybinds.hideNames.hint\", { setting: t(\"core.outputChat.name\") }),\n\t\t};\n\n\t\tconst insertHTML = await renderTemplate(`modules/${moduleId}/templates/token-config.html`, data);\n\t\tposTab.append(insertHTML);\n\t}\n}\n","import { t } from \"../../utils.js\";\n\nexport default class EstimationProvider {\n\tconstructor() {\n\t\t/**\n\t\t * Non-exhaustive list of possible character-types that should use the DeathStateName. This is way to avoid vehicles being \"Dead\"\n\t\t * @type {string[]}\n\t\t */\n\t\tthis.organicTypes = [\"character\", \"pc\", \"monster\", \"mook\", \"npc\", \"familiar\", \"traveller\", \"animal\"]; // There must be a better way\n\n\t\t/**\n\t\t * Code that will be run during HealthEstimate.getTokenEstimate()\n\t\t * @type {string}\n\t\t */\n\t\tthis.customLogic = \"\";\n\n\t\t/**\n\t\t * Default value of the Death State setting.\n\t\t * @type {Boolean}\n\t\t * */\n\t\tthis.deathState = false;\n\n\t\t/**\n\t\t * Default value of the Death State Name setting.\n\t\t * @type {String}\n\t\t */\n\t\tthis.deathStateName = t(\"core.deathStateName.default\");\n\n\t\t/**\n\t\t * Configuration for the Death Marker setting.\n\t\t * @type {Object}\n\t\t */\n\t\tthis.deathMarker = {\n\t\t\t/** Sets if the setting will be visible in the module's settings */\n\t\t\tconfig:\n\t\t\t\t!CONFIG.statusEffects.find((x) => x.id === \"dead\")\n\t\t\t\t|| game.modules.get(\"combat-utility-belt\")?.active\n\t\t\t\t|| game.modules.get(\"condition-lab-triggler\")?.active,\n\t\t\t/** Sets the setting's default value */\n\t\t\tdefault: CONFIG.statusEffects.find((x) => x.id === \"dead\")?.img || \"icons/svg/skull.svg\",\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t * @type {Object}\n\t\t */\n\t\tthis.vehicleRules = {\n\t\t\t/** Sets if the setting will be visible in the module's settings */\n\t\t\tconfig: false,\n\t\t\t/** List with actor types that are considered vehicles (e.g. spacecraft, drone, etc) */\n\t\t\tvehicles: [\"vehicle\"],\n\t\t};\n\n\t\t/**\n\t\t * Sets if the \"Add Temporary Health\" setting is enabled.\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.addTemp = false;\n\n\t\t/**\n\t\t * Sets if the \"Hide on tokens with 0 max HP\" setting is enabled.\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.breakOnZeroMaxHP = false;\n\n\t\t/**\n\t\t * Default value of the Estimations setting.\n\t\t * @type {{Array}}\n\t\t */\n\t\tthis.estimations = [\n\t\t\t{\n\t\t\t\tname: \"\",\n\t\t\t\tignoreColor: false,\n\t\t\t\trule: \"default\",\n\t\t\t\testimates: [\n\t\t\t\t\t{ value: 0, label: t(\"core.estimates.states.0\") },\n\t\t\t\t\t{ value: 25, label: t(\"core.estimates.states.1\") },\n\t\t\t\t\t{ value: 50, label: t(\"core.estimates.states.2\") },\n\t\t\t\t\t{ value: 75, label: t(\"core.estimates.states.3\") },\n\t\t\t\t\t{ value: 99, label: t(\"core.estimates.states.4\") },\n\t\t\t\t\t{ value: 100, label: t(\"core.estimates.states.5\") },\n\t\t\t\t],\n\t\t\t},\n\t\t];\n\t}\n\n\t/**\n\t * Calculates the fraction of the current health divided by the maximum health.\n\t * @param {TokenDocument} token\n\t * @returns {Number}\tNumber between 0.0 and 1.0.\n\t */\n\tfraction(token) {\n\t\tthrow new Error(\"A subclass of the SystemProvider must implement the fraction method.\");\n\t}\n\n\t/**\n\t * Returns a set of system-specific settings. All settings are registered as part of the healthEstimate module.\n\t *\n\t * Names and Hints are unnecessary if they are set as \"systemname.setting.name\" and \"systemname.setting.hint\".\n\t *\n\t * Scope is unnecessary if \"world\"\n\t *\n\t * Config is unnecessary if true\n\t * @returns {{string: {SettingConfig}}}\n\t */\n\tget settings() {\n\t\treturn {};\n\t}\n\n\t/**\n\t * Is used on the breakCondition getter.\n\t * @returns {String}\n\t *\n\t * @see alienrpgEstimationProvider\n\t */\n\tget isVehicle() {\n\t\treturn `['${this.vehicleRules.vehicles.join(\"','\")}'].includes(token.actor.type)`;\n\t}\n\n\t/**\n\t * A set of conditionals written as a string that will stop the rendering of the estimate.\n\t * @returns {String}\n\t *\n\t * @see dnd5eEstimationProvider\n\t * @see pf2eEstimationProvider\n\t */\n\tstatic get breakCondition() {\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * This is for the big marker shown on defeated tokens (the skull marker by default).\n\t * Only use this if your system doesn't add the marker as an effect.\n\t * @returns {Boolean}\n\t *\n\t * @see dsa5EstimationProvider\n\t * @see pf2eEstimationProvider\n\t * @see swadeEstimationProvider\n\t */\n\tstatic tokenEffects(token) {\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Validates if a given HP object is valid.\n\t * @param {TokenDocument} token\n\t * @param {{value: Number, max: Number, temp: Number?}} hp\tThe HP object.\n\t * @param {String} hpPath\tThe HP Data Path.\n\t */\n\t_checkValidHP(token, hp, hpPath) {\n\t\tif (hp === undefined || hp === null) {\n\t\t\tif (hpPath === \"\") {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`The HP is undefined, try using the ${game.i18n.localize(\n\t\t\t\t\t\t\"healthEstimate.core.custom.FractionHP.name\"\n\t\t\t\t\t)} setting.`\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`The ${game.i18n.localize(\n\t\t\t\t\t\t\"healthEstimate.core.custom.FractionHP.name\"\n\t\t\t\t\t)} setting (\"${hpPath}\") is wrong.`\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (hp.max === undefined) {\n\t\t\tthrow new Error(\n\t\t\t\t`Token ${token.name}'s HP has no maximum value and the etimation can't be calculated without it.`\n\t\t\t);\n\t\t}\n\t}\n}\n\n","import EstimationProvider from \"./templates/Base.js\";\n\nexport default class CoC7EstimationProvider extends EstimationProvider {\n\tfraction(token) {\n\t\tconst hp = token.actor.system.attribs.hp;\n\t\tif (hp.max > 0) return hp.value / hp.max;\n\t\treturn 0;\n\t}\n\n\tget breakCondition() {\n\t\treturn \"|| token.actor.type === 'container'\";\n\t}\n}\n","import { f, sGet, t } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class D35EEstimationProvider extends EstimationProvider {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.customLogic = `\n\t\tconst hp = token.actor.system.attributes.hp;\n\t\tlet addTemp = 0;\n\t\tif (game.settings.get(\"healthEstimate\", \"core.addTemp\")) {\n\t\t\taddTemp = hp.temp;\n\t\t}\n\t\tconst totalHp = hp.value + addTemp;`;\n\t\tthis.addTemp = true;\n\t\tthis.breakOnZeroMaxHP = true;\n\t\tthis.estimations = [\n\t\t\t...this.estimations,\n\t\t\t{\n\t\t\t\tname: game.i18n.localize(\"D35E.Disabled\"),\n\t\t\t\tignoreColor: true,\n\t\t\t\trule: \"game.settings.get(\\\"healthEstimate\\\", \\\"PF1.showExtra\\\") && (totalHp === 0 || Array.from(token.actor.effects.values()).some((x) => x.name === game.i18n.localize(\\\"D35E.Disabled\\\")))\",\n\t\t\t\testimates: [{ value: 100, label: game.i18n.localize(\"D35E.Disabled\") }],\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: game.i18n.localize(\"D35E.Staggered\"),\n\t\t\t\tignoreColor: true,\n\t\t\t\trule: \"game.settings.get(\\\"healthEstimate\\\", \\\"PF1.showExtra\\\") && (hp.nonlethal > 0 && totalHp == hp.nonlethal) || Array.from(token.actor.effects.values()).some((x) => x.name === game.i18n.localize(\\\"D35E.Staggered\\\"))\",\n\t\t\t\testimates: [{ value: 100, label: game.i18n.localize(\"D35E.Staggered\") }],\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: game.i18n.localize(\"D35E.Unconscious\"),\n\t\t\t\tignoreColor: true,\n\t\t\t\trule: \"game.settings.get(\\\"healthEstimate\\\", \\\"PF1.showExtra\\\") && (hp.nonlethal > totalHp || Array.from(token.actor.effects.values()).some((x) => x.name === game.i18n.localize(\\\"D35E.Unconscious\\\")))\",\n\t\t\t\testimates: [{ value: 100, label: game.i18n.localize(\"D35E.Unconscious\") }],\n\t\t\t},\n\t\t];\n\t}\n\n\tfraction(token) {\n\t\tconst hp = token.actor.system.attributes.hp;\n\t\tlet addTemp = 0;\n\t\tlet addNonlethal = 0;\n\t\tif (sGet(\"core.addTemp\")) {\n\t\t\taddTemp = hp.temp;\n\t\t}\n\t\tif (sGet(\"PF1.addNonlethal\")) {\n\t\t\taddNonlethal = hp.nonlethal;\n\t\t}\n\t\treturn (hp.value - addNonlethal + addTemp) / hp.max;\n\t}\n\n\tget settings() {\n\t\treturn {\n\t\t\t\"PF1.addNonlethal\": {\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: true,\n\t\t\t},\n\t\t\t\"PF1.showExtra\": {\n\t\t\t\tname: f(\"PF1.showExtra.name\", {\n\t\t\t\t\tcondition1: t(\"PF1.disabledName.default\"),\n\t\t\t\t\tcondition2: t(\"PF1.dyingName.default\"),\n\t\t\t\t}),\n\t\t\t\thint: f(\"PF1.showExtra.hint\", {\n\t\t\t\t\tcondition1: t(\"PF1.disabledName.default\"),\n\t\t\t\t\tcondition2: t(\"PF1.dyingName.default\"),\n\t\t\t\t}),\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: true,\n\t\t\t},\n\t\t\t\"PF1.disabledName\": {\n\t\t\t\ttype: String,\n\t\t\t\tdefault: t(\"PF1.disabledName.default\"),\n\t\t\t\tconfig: false,\n\t\t\t},\n\t\t\t\"PF1.dyingName\": {\n\t\t\t\ttype: String,\n\t\t\t\tdefault: t(\"PF1.dyingName.default\"),\n\t\t\t\tconfig: false,\n\t\t\t},\n\t\t};\n\t}\n\n\tget breakCondition() {\n\t\treturn \"||game.settings.get('healthEstimate', 'core.breakOnZeroMaxHP') && token.actor.system.attributes.hp.max === 0\";\n\t}\n}\n","import { sGet } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class a5eEstimationProvider extends EstimationProvider {\n\t/*\n\t\tThanks to the original author of the 5E provider for basically providing the code needed to add A5E support.\n\t\tThanks to Nekro and Phil for using the same datapaths in A5E as what is used in 5E, making changes basically unnessary.\n\t*/\n\n\tfraction(token) {\n\t\tconst hp = token.actor.system.attributes.hp;\n\t\tlet temp = 0;\n\t\tif (sGet(\"core.addTemp\")) {\n\t\t\ttemp = hp.temp;\n\t\t}\n\t\treturn Math.min((temp + hp.value) / hp.max, 1);\n\t}\n}\n","import EstimationProvider from \"./templates/Base.js\";\n\nexport default class ageSystemEstimationProvider extends EstimationProvider {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.breakOnZeroMaxHP = true;\n\t}\n\n\tfraction(token) {\n\t\tconst hp = token.actor.system.health;\n\t\treturn hp.value / hp.max;\n\t}\n\n\tget breakCondition() {\n\t\treturn \"|| (game.settings.get('healthEstimate', 'core.breakOnZeroMaxHP') && token.actor.system.health.max === 0)\";\n\t}\n}\n","import { t } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class alienrpgEstimationProvider extends EstimationProvider {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.vehicleRules = {\n\t\t\tconfig: true,\n\t\t\tvehicles: [\"vehicles\", \"spacecraft\"],\n\t\t};\n\t\tthis.breakOnZeroMaxHP = true;\n\t\tthis.estimations = [\n\t\t\t...this.estimations,\n\t\t\t{\n\t\t\t\tname: \"Vehicles & Spaceships\",\n\t\t\t\trule: \"type === \\\"vehicles\\\" || type === \\\"spacecraft\\\"\",\n\t\t\t\testimates: [\n\t\t\t\t\t{ value: 0, label: t(\"core.estimates.vehicles.0\") },\n\t\t\t\t\t{ value: 20, label: t(\"core.estimates.vehicles.1\") },\n\t\t\t\t\t{ value: 40, label: t(\"core.estimates.vehicles.2\") },\n\t\t\t\t\t{ value: 60, label: t(\"core.estimates.vehicles.3\") },\n\t\t\t\t\t{ value: 80, label: t(\"core.estimates.vehicles.4\") },\n\t\t\t\t\t{ value: 100, label: t(\"core.estimates.vehicles.5\") },\n\t\t\t\t],\n\t\t\t},\n\t\t];\n\t}\n\n\tfraction(token) {\n\t\tif (token.actor.type === \"vehicles\") {\n\t\t\tconst hull = token.actor.system.attributes.hull;\n\t\t\treturn hull.value / hull.max;\n\t\t} else if (token.actor.type === \"spacecraft\") {\n\t\t\tconst hull = token.actor.system.attributes.hull.value;\n\t\t\tconst damage = token.actor.system.attributes.damage.value;\n\t\t\treturn (hull - damage) / hull;\n\t\t}\n\t\tconst hp = token.actor.system.header.health;\n\t\treturn hp.value / hp.max;\n\t}\n\n\tget breakCondition() {\n\t\treturn `\n\t\t|| ${this.isVehicle} && game.settings.get('healthEstimate', 'core.hideVehicleHP')\n\t\t|| (game.settings.get('healthEstimate', 'core.breakOnZeroMaxHP')\n\t\t\t&& (\n\t\t\t\t(${this.isVehicle} && token.actor.system.attributes.hull.max === 0)\n\t\t\t\t|| (!${this.isVehicle} && token.actor.system.header.health.max === 0)\n\t\t\t)\n\t\t)`;\n\t}\n}\n","import { sGet } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class archmageEstimationProvider extends EstimationProvider {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.addTemp = true;\n\t\tthis.breakOnZeroMaxHP = true;\n\t}\n\n\tfraction(token) {\n\t\tconst hp = token.actor.system.attributes.hp;\n\t\tlet temp = 0;\n\t\tif (token.actor.type === \"character\" && sGet(\"core.addTemp\")) {\n\t\t\ttemp = hp.temp;\n\t\t}\n\t\treturn Math.min((temp + hp.value) / hp.max, 1);\n\t}\n\n\tget breakCondition() {\n\t\treturn \"|| game.settings.get('healthEstimate', 'core.breakOnZeroMaxHP') && token.actor.system.attributes.hp.max === 0\";\n\t}\n}\n","import { isEmpty } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class bandOfBladesEstimationProvider extends EstimationProvider {\n\tfraction(token) {\n\t\tconst hp = token.actor.system.harm;\n\t\tlet harmLevel = 0;\n\t\tfor (let [key, value] of Object.entries(hp)) {\n\t\t\tfor (let entry of Object.values(value)) {\n\t\t\t\tif (!isEmpty(entry)) {\n\t\t\t\t\t// Testing for empty or whitespace\n\t\t\t\t\tswitch (key) {\n\t\t\t\t\t\tcase \"light\":\n\t\t\t\t\t\t\tharmLevel += 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"medium\":\n\t\t\t\t\t\t\tharmLevel += 3;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"heavy\":\n\t\t\t\t\t\t\tharmLevel += 9;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"deadly\":\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 1 - (harmLevel / 18);\n\t}\n\n\tget breakCondition() {\n\t\treturn `\n\t\t|| token.actor.type === \"role\"\n\t\t|| token.actor.type === \"chosen\"\n\t\t|| token.actor.type === \"minion\"\n\t\t|| token.actor.type === \"\\uD83D\\uDD5B clock\"`;\n\t}\n}\n","import EstimationProvider from \"./templates/Base.js\";\n\nexport default class bladeRunnerEstimationProvider extends EstimationProvider {\n\tfraction(token) {\n\t\tconst hp = token.actor.system.health;\n\t\treturn hp.value / hp.max;\n\t}\n}\n","import { isEmpty } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class bladesInTheDarkEstimationProvider extends EstimationProvider {\n\tfraction(token) {\n\t\tconst hp = token.actor.system.harm;\n\t\tlet harmLevel = 0;\n\t\tfor (let [key, value] of Object.entries(hp)) {\n\t\t\tfor (let entry of Object.values(value)) {\n\t\t\t\tif (!isEmpty(entry)) {\n\t\t\t\t\t// Testing for empty or whitespace\n\t\t\t\t\tswitch (key) {\n\t\t\t\t\t\tcase \"light\":\n\t\t\t\t\t\t\tharmLevel += 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"medium\":\n\t\t\t\t\t\t\tharmLevel += 3;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"heavy\":\n\t\t\t\t\t\t\tharmLevel += 9;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"deadly\":\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 1 - (harmLevel / 18);\n\t}\n\n\tget breakCondition() {\n\t\treturn `\n\t\t|| token.actor.type === \"npc\"\n\t\t|| token.actor.type === \"crew\"\n\t\t|| token.actor.type === \"\\uD83D\\uDD5B clock\"\n\t\t|| token.actor.type === \"factions\"`;\n\t}\n}\n","import { f, sGet, t } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class CustomSystemBuilderEstimationProvider extends EstimationProvider {\n\tfraction(token) {\n\t\tconst hpPath = sGet(\"core.custom.FractionHP\");\n\t\tconst hp =\n\t\t\tfoundry.utils.getProperty(token, hpPath) || token.actor.system.attributes?.hp || token.actor.system.hp;\n\t\tconst thpPath = sGet(\"custom-system-builder.tempHP\");\n\t\tconst temp = thpPath && token.actor.type === \"character\" ? Number(foundry.utils.getProperty(token, thpPath).temp) : 0;\n\n\t\tthis._checkValidHP(token, hp, hpPath);\n\t\tconst FractionMath = sGet(\"core.custom.FractionMath\");\n\t\tswitch (FractionMath) {\n\t\t\tcase 0:\n\t\t\t\treturn Math.min((Number(hp.value) + temp) / Number(hp.max), 1);\n\t\t\tcase 1:\n\t\t\tdefault:\n\t\t\t\treturn (Number(hp.max) + temp - Number(hp.value)) / (Number(hp.max) + temp);\n\t\t}\n\t}\n\n\tget settings() {\n\t\treturn {\n\t\t\t\"core.custom.FractionHP\": {\n\t\t\t\thint: f(\"custom-system-builder.FractionHP.hint\", {\n\t\t\t\t\tdataPath1: '\"actor.system.attributeBar.hp\"',\n\t\t\t\t\tdataPath2: '\"actor.system.attributeBar.health\"',\n\t\t\t\t}),\n\t\t\t\ttype: String,\n\t\t\t\tdefault: \"\",\n\t\t\t},\n\t\t\t\"custom-system-builder.tempHP\": {\n\t\t\t\thint: f(\"custom-system-builder.tempHP.hint\", { setting: t(\"core.custom.FractionHP.name\") }),\n\t\t\t\ttype: String,\n\t\t\t\tdefault: \"\",\n\t\t\t},\n\t\t\t\"core.custom.FractionMath\": {\n\t\t\t\ttype: Number,\n\t\t\t\tdefault: 0,\n\t\t\t\tchoices: {\n\t\t\t\t\t0: t(\"core.custom.FractionMath.choices.0\"),\n\t\t\t\t\t1: t(\"core.custom.FractionMath.choices.1\"),\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n}\n","import { t } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class cyberpunkRedCoreEstimationProvider extends EstimationProvider {\n\t// This game has its own estimates, called Wound State, which are calculated by the system.\n\t// The issue is that this data is only broadcast to GMs, not other users.\n\t// See https://github.com/mclemente/healthEstimate/issues/119\n\t// and https://gitlab.com/cyberpunk-red-team/fvtt-cyberpunk-red-core/-/issues/680\n\tconstructor() {\n\t\tsuper();\n\t\tthis.estimations = [\n\t\t\t{\n\t\t\t\tname: \"\",\n\t\t\t\trule: \"default\",\n\t\t\t\testimates: [\n\t\t\t\t\t{ value: 0, label: game.i18n.localize(\"CPR.global.woundState.dead\") },\n\t\t\t\t\t{ value: 1, label: game.i18n.localize(\"CPR.global.woundState.mortallyWounded\") },\n\t\t\t\t\t{ value: 50, label: game.i18n.localize(\"CPR.global.woundState.seriouslyWounded\") },\n\t\t\t\t\t{ value: 99, label: game.i18n.localize(\"CPR.global.woundState.lightlyWounded\") },\n\t\t\t\t\t{ value: 100, label: game.i18n.localize(\"CPR.global.woundState.notWounded\") },\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: `${game.i18n.localize(\"TYPES.Actor.Blackice\")}/${game.i18n.localize(\"TYPES.Actor.Demon\")}`,\n\t\t\t\trule: \"type === \\\"blackIce\\\" || type === \\\"demon\\\"\",\n\t\t\t\testimates: [\n\t\t\t\t\t{ value: 0, label: t(\"cyberpunk-red-core.unorganics.0\") },\n\t\t\t\t\t{ value: 50, label: t(\"cyberpunk-red-core.unorganics.2\") },\n\t\t\t\t\t{ value: 99, label: t(\"cyberpunk-red-core.unorganics.3\") },\n\t\t\t\t\t{ value: 100, label: t(\"cyberpunk-red-core.unorganics.4\") },\n\t\t\t\t],\n\t\t\t},\n\t\t];\n\t}\n\n\tfraction(token) {\n\t\tlet hp;\n\t\tif (token.actor.system.derivedStats) {\n\t\t\thp = token.actor.system.derivedStats.hp;\n\t\t} else if (token.actor.system.stats) {\n\t\t\thp = token.actor.system.stats.rez;\n\t\t}\n\t\treturn hp.value / hp.max;\n\t}\n\n\tget breakCondition() {\n\t\treturn \"|| token.actor.type === 'container'\";\n\t}\n}\n","import { sGet } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class cyphersystemEstimationProvider extends EstimationProvider {\n\tfraction(token) {\n\t\tconst actor = token.actor;\n\t\tif (actor.type === \"pc\") {\n\t\t\tconst pools = actor.system.pools;\n\t\t\tlet curr = pools.might.value + pools.speed.value + pools.intellect.value;\n\t\t\tlet max = pools.might.max + pools.speed.max + pools.intellect.max;\n\t\t\tif (actor.system.settings.general.additionalPool.active) {\n\t\t\t\tcurr += pools.additional.value;\n\t\t\t\tmax += pools.additional.max;\n\t\t\t}\n\t\t\tconst result = Math.min(1, curr / max);\n\t\t\tlet limit = 1;\n\n\t\t\tswitch (actor.system.combat.damageTrack.state) {\n\t\t\t\tcase \"Impaired\":\n\t\t\t\t\tlimit = sGet(\"cyphersystem.impaired\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Debilitated\":\n\t\t\t\t\tlimit = sGet(\"cyphersystem.debilitated\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn Math.min(result, limit);\n\t\t} else if (actor.system.pools?.health) {\n\t\t\tlet hp = actor.system.pools.health;\n\t\t\treturn hp.value / hp.max;\n\t\t}\n\t}\n\n\tget settings() {\n\t\treturn {\n\t\t\t\"cyphersystem.impaired\": {\n\t\t\t\ttype: Number,\n\t\t\t\tdefault: 0.5,\n\t\t\t},\n\t\t\t\"cyphersystem.debilitated\": {\n\t\t\t\ttype: Number,\n\t\t\t\tdefault: 0.1,\n\t\t\t},\n\t\t};\n\t}\n\n\tget breakCondition() {\n\t\treturn \"|| ![ 'pc', 'npc', 'companion','community' ].includes(token.actor.type)\";\n\t}\n}\n","import { sGet } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class dnd4eEstimationProvider extends EstimationProvider {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.organicTypes = [\"Player Character\", \"NPC\"];\n\t\tthis.addTemp = true;\n\t\tthis.breakOnZeroMaxHP = true;\n\t}\n\n\tfraction(token) {\n\t\tconst hp = token.actor.system.attributes.hp;\n\t\tconst temphp = token.actor.system.attributes.temphp;\n\t\tlet temp = 0;\n\t\tif (sGet(\"core.addTemp\")) {\n\t\t\ttemp = temphp.value;\n\t\t}\n\t\treturn Math.min((temp + hp.value) / hp.max, 1);\n\t}\n\n\tget breakCondition() {\n\t\treturn \"|| (game.settings.get('healthEstimate', 'core.breakOnZeroMaxHP') && token.actor.system.attributes.hp.max === 0)\";\n\t}\n}\n","import { sGet, t } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class dnd5eEstimationProvider extends EstimationProvider {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.vehicleRules = {\n\t\t\tconfig: true,\n\t\t\tvehicles: [\"vehicle\"],\n\t\t};\n\t\tthis.addTemp = true;\n\t\tthis.breakOnZeroMaxHP = true;\n\t\tthis.estimations = [\n\t\t\t...this.estimations,\n\t\t\t{\n\t\t\t\tname: \"Vehicles\",\n\t\t\t\trule: \"type === \\\"vehicle\\\"\",\n\t\t\t\testimates: [\n\t\t\t\t\t{ value: 0, label: t(\"core.estimates.vehicles.0\") },\n\t\t\t\t\t{ value: 20, label: t(\"core.estimates.vehicles.1\") },\n\t\t\t\t\t{ value: 40, label: t(\"core.estimates.vehicles.2\") },\n\t\t\t\t\t{ value: 60, label: t(\"core.estimates.vehicles.3\") },\n\t\t\t\t\t{ value: 80, label: t(\"core.estimates.vehicles.4\") },\n\t\t\t\t\t{ value: 100, label: t(\"core.estimates.vehicles.5\") },\n\t\t\t\t],\n\t\t\t},\n\t\t];\n\t}\n\n\tfraction(token) {\n\t\tconst hp = token.actor.system.attributes.hp;\n\t\tif (token.actor.type === \"character\" && sGet(\"core.addTemp\")) {\n\t\t\treturn Math.min(hp.pct/100, 1);\n\t\t}\n\t\treturn Math.min(hp.value / hp.max, 1);\n\t}\n\n\tget breakCondition() {\n\t\treturn `\n        || ${this.isVehicle} && game.settings.get('healthEstimate', 'core.hideVehicleHP')\n\t\t|| token.actor.type == 'group'\n\t\t|| token.actor.system.attributes.hp.max === null\n\t\t|| (game.settings.get('healthEstimate', 'core.breakOnZeroMaxHP') && token.actor.system.attributes.hp.max === 0)`;\n\t}\n}\n","import EstimationProvider from \"./templates/Base.js\";\n\nexport default class ds4EstimationProvider extends EstimationProvider {\n\tfraction(token) {\n\t\tlet hp = token.actor.system.combatValues.hitPoints;\n\t\treturn hp.value / hp.max;\n\t}\n}\n","import EstimationProvider from \"./templates/Base.js\";\n\nexport default class dsa5EstimationProvider extends EstimationProvider {\n\tfraction(token) {\n\t\tlet hp = token.actor.system.status.wounds;\n\t\treturn hp.value / hp.max;\n\t}\n}\n","import EstimationProvider from \"./templates/Base.js\";\n\nexport default class dungeonworldEstimationProvider extends EstimationProvider {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.breakOnZeroMaxHP = true;\n\t}\n\n\tfraction(token) {\n\t\tconst hp = token.actor.system.attributes.hp;\n\t\treturn Math.min(hp.value / hp.max, 1);\n\t}\n\n\tget breakCondition() {\n\t\treturn \"|| (game.settings.get('healthEstimate', 'core.breakOnZeroMaxHP') && token.actor.system.attributes.hp.max === 0)\";\n\t}\n}\n","import EstimationProvider from \"./templates/Base.js\";\n\nexport default class forbiddenLandsEstimationProvider extends EstimationProvider {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.breakOnZeroMaxHP = true;\n\t}\n\n\tfraction(token) {\n\t\tswitch (token.actor.type) {\n\t\t\tcase \"character\":\n\t\t\tcase \"monster\": {\n\t\t\t\tconst hp = token.actor.system.attribute.strength;\n\t\t\t\treturn Math.min(hp.value / hp.max, 1);\n\t\t\t}\n\t\t\tdefault:\n\n\t\t}\n\t}\n\n\tget breakCondition() {\n\t\treturn `\n        || token.actor.type === \"party\"\n        || token.actor.type === \"stronghold\"\n        || (game.settings.get('healthEstimate', 'core.breakOnZeroMaxHP') && token.actor.system.attribute.strength.max === 0)`;\n\t}\n}\n","import EstimationProvider from \"./templates/Base.js\";\n\nexport default class reveDeDragonEstimationProvider extends EstimationProvider {\n\tfraction(token) {\n\t\tfunction ratio(node) {\n\t\t\treturn Math.clamped(node.value / node.max, 0, 1);\n\t\t}\n\t\tfunction estimationBlessures(token) {\n\t\t\tif (token.actor.system.blessures === undefined) {\n\t\t\t\treturn missing;\n\t\t\t}\n\t\t\tconst nodeBlessures = token.actor.system.blessures ?? {\n\t\t\t\tlegeres: { list: [] },\n\t\t\t\tgraves: { list: [] },\n\t\t\t\tcritiques: { list: [] },\n\t\t\t};\n\t\t\tconst legeres = nodeBlessures.legeres.liste.filter((it) => it.active).length;\n\t\t\tconst graves = nodeBlessures.graves.liste.filter((it) => it.active).length;\n\t\t\tconst critiques = nodeBlessures.critiques.liste.filter((it) => it.active).length;\n\n\t\t\tconst tableBlessure = {\n\t\t\t\tlegere: [0, 10, 20, 30, 40, 50],\n\t\t\t\tgrave: [0, 60, 70],\n\t\t\t\tcritique: [0, 90],\n\t\t\t\tinconscient: 100,\n\t\t\t};\n\t\t\t/*\n\t\t\t * Estimation of seriousness of wounds: considerinng wounds that can be taken.\n\t\t\t * - 5x \"legere\" = light\n\t\t\t * - 2x \"grave\" = serious\n\t\t\t * - 1x \"critique\" = critical\n\t\t\t * If one type of wounds is full, next in this category automatically goes\n\t\t\t * to the next (ie: 3rd serious wound becomes critical).\n\t\t\t * Using an estimation of state of health based on the worst category of wounds\n\t\t\t */\n\t\t\treturn {\n\t\t\t\tvalue: critiques > 0\n\t\t\t\t\t? tableBlessure.critique[critiques]\n\t\t\t\t\t: graves > 0\n\t\t\t\t\t\t? tableBlessure.grave[graves]\n\t\t\t\t\t\t: tableBlessure.legere[legeres],\n\t\t\t\tmax: tableBlessure.inconscient,\n\t\t\t};\n\t\t}\n\t\tconst missing = { value: 0, max: 1 };\n\n\t\tif (token.actor.type === \"entite\") {\n\t\t\treturn ratio(token.actor.system.sante.endurance);\n\t\t}\n\t\tconst ratioFatigue = 1 - (ratio(token.actor.system.sante?.fatigue ?? missing) / 2);\n\t\tconst ratioVie = ratio(token.actor.system.sante?.vie ?? missing);\n\t\tconst ratioEndurance = 0.4 + (ratio(token.actor.system.sante?.endurance ?? missing) * 0.6);\n\t\tconst ratioBlessure = 1 - ratio(estimationBlessures(token));\n\n\t\treturn Math.min(ratioBlessure, ratioEndurance, ratioFatigue, ratioVie);\n\t}\n\n\tget breakCondition() {\n\t\treturn \"||token.actor.type === \\\"vehicule\\\"\";\n\t}\n}\n","import EstimationProvider from \"./templates/Base.js\";\n\nexport default class lancerEstimationProvider extends EstimationProvider {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.breakOnZeroMaxHP = true;\n\t}\n\n\tfraction(token) {\n\t\tconst hp = token.actor.system.derived.hp;\n\t\treturn hp.value / hp.max;\n\t}\n\n\tget breakCondition() {\n\t\treturn `\n        || game.settings.get('healthEstimate', 'core.breakOnZeroMaxHP')\n        && (token.actor.system.mech?.hp.max === 0 || token.actor.system?.derived?.hp?.max === 0)`;\n\t}\n}\n","import EstimationProvider from \"./templates/Base.js\";\n\nexport default class monsterweekEstimationProvider extends EstimationProvider {\n\tfraction(token) {\n\t\tconst hp = token.actor.system.harm;\n\t\treturn hp.value / hp.max;\n\t}\n\n\tget breakCondition() {\n\t\treturn \"||token.actor.type === \\\"location\\\"\";\n\t}\n}\n","import { sGet } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class numeneraEstimationProvider extends EstimationProvider {\n\tfraction(token) {\n\t\tif (token.actor.type === \"pc\") {\n\t\t\tconst might = token.actor.system.stats.might;\n\t\t\tconst speed = token.actor.system.stats.speed;\n\t\t\tconst intellect = token.actor.system.stats.intellect;\n\t\t\tif (sGet(\"numenera.countPools\")) {\n\t\t\t\tlet fullPools = 3;\n\t\t\t\tfor (let pool of [might, speed, intellect]) {\n\t\t\t\t\tif (pool.pool.current === 0) {\n\t\t\t\t\t\tfullPools -= 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn fullPools / 3;\n\t\t\t}\n\t\t\tlet [total, max] = [0, 0];\n\t\t\tfor (let pool of [might, speed, intellect]) {\n\t\t\t\ttotal += pool.pool.current;\n\t\t\t\tmax += pool.pool.maximum;\n\t\t\t}\n\t\t\treturn total / max;\n\t\t}\n\t\tconst hp = token.actor.system.health;\n\t\treturn hp.current / hp.max;\n\t}\n\n\tget settings() {\n\t\treturn {\n\t\t\t\"numenera.countPools\": {\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: false,\n\t\t\t},\n\t\t};\n\t}\n}\n","import { t } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class od6sEstimationProvider extends EstimationProvider {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.vehicleRules = {\n\t\t\tconfig: true,\n\t\t\tvehicles: [\"vehicle\", \"starship\"],\n\t\t};\n\t\tthis.estimations = [\n\t\t\t...this.estimations,\n\t\t\t{\n\t\t\t\tname: \"Vehicles\",\n\t\t\t\trule: \"type === \\\"vehicle\\\" || type === \\\"starship\\\"\",\n\t\t\t\testimates: [\n\t\t\t\t\t{ value: 0, label: t(\"core.estimates.vehicles.0\") },\n\t\t\t\t\t{ value: 20, label: t(\"core.estimates.vehicles.1\") },\n\t\t\t\t\t{ value: 40, label: t(\"core.estimates.vehicles.2\") },\n\t\t\t\t\t{ value: 60, label: t(\"core.estimates.vehicles.3\") },\n\t\t\t\t\t{ value: 80, label: t(\"core.estimates.vehicles.4\") },\n\t\t\t\t\t{ value: 100, label: t(\"core.estimates.vehicles.5\") },\n\t\t\t\t],\n\t\t\t},\n\t\t];\n\t}\n\n\tfraction(token) {\n\t\tconst type = token.actor.type;\n\t\tswitch (type) {\n\t\t\tcase \"npc\":\n\t\t\tcase \"creature\":\n\t\t\tcase \"character\": {\n\t\t\t\tconst od6swounds = token.actor.system.wounds.value;\n\t\t\t\treturn 1 - (od6swounds / 6);\n\t\t\t}\n\t\t\tcase \"vehicle\":\n\t\t\tcase \"starship\": {\n\t\t\t\tconst od6sdamagestring = token.actor.system.damage.value;\n\t\t\t\tlet od6sdamage;\n\t\t\t\tswitch (od6sdamagestring) {\n\t\t\t\t\tcase \"OD6S.DAMAGE_NONE\":\n\t\t\t\t\t\tod6sdamage = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"OD6S.DAMAGE_VERY_LIGHT\":\n\t\t\t\t\t\tod6sdamage = 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"OD6S.DAMAGE_LIGHT\":\n\t\t\t\t\t\tod6sdamage = 2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"OD6S.DAMAGE_HEAVY\":\n\t\t\t\t\t\tod6sdamage = 3;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"OD6S.DAMAGE_SEVERE\":\n\t\t\t\t\t\tod6sdamage = 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"OD6S.DAMAGE_DESTROYED\":\n\t\t\t\t\t\tod6sdamage = 5;\n\t\t\t\t}\n\t\t\t\treturn 1 - (od6sdamage / 5);\n\t\t\t}\n\t\t}\n\t}\n\n\tget breakCondition() {\n\t\treturn `\n        || ${this.isVehicle} && game.settings.get('healthEstimate', 'core.hideVehicleHP')\n\t\t|| token.actor.type === \"container\"`;\n\t}\n}\n","import EstimationProvider from \"./templates/Base.js\";\n\nexport default class oseEstimationProvider extends EstimationProvider {\n\tfraction(token) {\n\t\tconst hp = token.actor.system.hp;\n\t\treturn Math.min(hp.value / hp.max, 1);\n\t}\n}\n","import { sGet } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class pbtaEstimationProvider extends EstimationProvider {\n\tfraction(token) {\n\t\tconst hpPath = sGet(\"core.custom.FractionHP\");\n\t\tconst hp = foundry.utils.getProperty(token, hpPath);\n\t\tthis._checkValidHP(token, hp, hpPath);\n\t\tif (hp.type === \"Resource\") return hp.value / hp.max;\n\t\treturn (hp.max - hp.value) / hp.max;\n\t}\n\n\tget settings() {\n\t\treturn {\n\t\t\t\"core.custom.FractionHP\": {\n\t\t\t\ttype: String,\n\t\t\t\tdefault: \"\"\n\t\t\t},\n\t\t};\n\t}\n}\n","import { f, sGet, t } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class pf1EstimationProvider extends EstimationProvider {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.addTemp = true;\n\t\tthis.breakOnZeroMaxHP = true;\n\t\tthis.customLogic = `\n\t\tconst hp = token.actor.system.attributes.hp;\n\t\tlet addTemp = 0;\n\t\tif (game.settings.get(\"healthEstimate\", \"core.addTemp\")) {\n\t\t\taddTemp = hp.temp;\n\t\t}\n\t\tconst totalHp = hp.value + addTemp;`;\n\t\tthis.estimations = [\n\t\t\t...this.estimations,\n\t\t\t{\n\t\t\t\tname: game.i18n.localize(\"PF1.CondStaggered\"),\n\t\t\t\tignoreColor: true,\n\t\t\t\trule: `\n\t\t\t\t\tgame.settings.get(\"healthEstimate\", \"PF1.showExtra\") &&\n\t\t\t\t\t(totalHp === 0 ||\n\t\t\t\t\t\t(hp.nonlethal > 0 && totalHp == hp.nonlethal) ||\n\t\t\t\t\t\tArray.from(token.actor.effects.values()).some((x) => x.label === game.i18n.localize(\"PF1.CondStaggered\")))`,\n\t\t\t\testimates: [{ value: 100, label: game.i18n.localize(\"PF1.CondStaggered\") }],\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: t(\"PF1.dyingName.name\"),\n\t\t\t\tignoreColor: true,\n\t\t\t\trule: \"game.settings.get(\\\"healthEstimate\\\", \\\"PF1.showExtra\\\") && hp.nonlethal > totalHp\",\n\t\t\t\testimates: [{ value: 100, label: t(\"PF1.dyingName.default\") }],\n\t\t\t},\n\t\t];\n\t}\n\n\tfraction(token) {\n\t\tconst { variants } = game.settings.get(\"pf1\", \"healthConfig\");\n\t\tconst hp = token.actor.system.attributes.hp;\n\t\tlet addTemp = 0;\n\t\tlet addNonlethal = 0;\n\n\t\tif ((token.actor.type === \"character\" && variants.pc.useWoundsAndVigor)\n\t\t\t|| (token.actor.type === \"npc\" && variants.npc.useWoundsAndVigor)) {\n\t\t\tconst vigor = token.actor.system.attributes.vigor;\n\t\t\tconst wounds = token.actor.system.attributes.wounds;\n\t\t\tif (sGet(\"core.addTemp\")) {\n\t\t\t\taddTemp = vigor.temp;\n\t\t\t}\n\t\t\treturn (vigor.value + wounds.value + addTemp) / (vigor.max + wounds.max);\n\t\t}\n\t\tif (sGet(\"core.addTemp\")) {\n\t\t\taddTemp = hp.temp;\n\t\t}\n\t\tif (sGet(\"PF1.addNonlethal\")) {\n\t\t\taddNonlethal = hp.nonlethal;\n\t\t}\n\t\treturn (hp.value - addNonlethal + addTemp) / hp.max;\n\t}\n\n\tget settings() {\n\t\treturn {\n\t\t\t\"PF1.addNonlethal\": {\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: true,\n\t\t\t},\n\t\t\t\"PF1.showExtra\": {\n\t\t\t\tname: f(\"PF1.showExtra.name\", {\n\t\t\t\t\tcondition1: t(\"PF1.disabledName.default\"),\n\t\t\t\t\tcondition2: t(\"PF1.dyingName.default\"),\n\t\t\t\t}),\n\t\t\t\thint: f(\"PF1.showExtra.hint\", {\n\t\t\t\t\tcondition1: t(\"PF1.disabledName.default\"),\n\t\t\t\t\tcondition2: t(\"PF1.dyingName.default\"),\n\t\t\t\t}),\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: true,\n\t\t\t},\n\t\t\t\"PF1.disabledName\": {\n\t\t\t\ttype: String,\n\t\t\t\tdefault: t(\"PF1.disabledName.default\"),\n\t\t\t\tconfig: false,\n\t\t\t},\n\t\t\t\"PF1.dyingName\": {\n\t\t\t\ttype: String,\n\t\t\t\tdefault: t(\"PF1.dyingName.default\"),\n\t\t\t\tconfig: false,\n\t\t\t},\n\t\t};\n\t}\n\n\tget breakCondition() {\n\t\treturn \"||game.settings.get('healthEstimate', 'core.breakOnZeroMaxHP') && token.actor.system.attributes.hp.max === 0\";\n\t}\n}\n","import { f, sGet, t } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class pf2eEstimationProvider extends EstimationProvider {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.addTemp = true;\n\t\tthis.breakOnZeroMaxHP = true;\n\t\tthis.estimations = [\n\t\t\t...this.estimations,\n\t\t\t{\n\t\t\t\tname: \"Vehicles & Hazards\",\n\t\t\t\trule: \"type === \\\"vehicle\\\" || type === \\\"hazard\\\"\",\n\t\t\t\testimates: [\n\t\t\t\t\t{ value: 0, label: t(\"core.estimates.vehicles.0\") },\n\t\t\t\t\t{ value: 20, label: t(\"core.estimates.vehicles.1\") },\n\t\t\t\t\t{ value: 40, label: t(\"core.estimates.vehicles.2\") },\n\t\t\t\t\t{ value: 60, label: t(\"core.estimates.vehicles.3\") },\n\t\t\t\t\t{ value: 80, label: t(\"core.estimates.vehicles.4\") },\n\t\t\t\t\t{ value: 100, label: t(\"core.estimates.vehicles.5\") },\n\t\t\t\t],\n\t\t\t},\n\t\t];\n\t}\n\n\tfraction(token) {\n\t\tconst data = foundry.utils.deepClone(token.actor.system.attributes);\n\t\tconst hp = data.hp;\n\t\tif (token.actor.type === \"familiar\" && token.actor.system?.master) {\n\t\t\tconst master = token.actor.system.master;\n\t\t\thp.max = token.actor.hitPoints.max ?? 5 * game.actors.get(master.id).system.details.level.value;\n\t\t}\n\t\tlet temp = sGet(\"core.addTemp\") && hp.temp ? hp.temp : 0;\n\t\tlet sp = game.settings.get(\"pf2e\", \"staminaVariant\") && sGet(\"PF2E.staminaToHp\") && hp.sp\n\t\t\t? hp.sp\n\t\t\t: { value: 0, max: 0 };\n\t\treturn Math.min((hp.value + sp.value + temp) / (hp.max + sp.max), 1);\n\t}\n\n\tget settings() {\n\t\treturn {\n\t\t\t\"PF2E.staminaToHp\": {\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: true,\n\t\t\t},\n\t\t\t\"PF2E.hideHazardHP\": {\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: true,\n\t\t\t},\n\t\t\t\"PF2E.hideVehicleHP\": {\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: false,\n\t\t\t},\n\t\t\t\"PF2E.workbenchMystifier\": {\n\t\t\t\thint: f(\"PF2E.workbenchMystifier.hint\", { setting: \"core.unknownEntity.name\" }),\n\t\t\t\tconfig: game.modules.get(\"xdy-pf2e-workbench\")?.active ?? false,\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: false,\n\t\t\t},\n\t\t};\n\t}\n\n\tget breakCondition() {\n\t\treturn `\n        || token.actor.type === 'vehicle' && game.settings.get('healthEstimate', 'PF2E.hideVehicleHP')\n        || token.actor.type === 'hazard' && game.settings.get('healthEstimate', 'PF2E.hideHazardHP')\n        || token.actor.type === 'loot'\n        || token.actor.type === 'party'\n        || (game.settings.get('healthEstimate', 'core.breakOnZeroMaxHP') && token.actor.system.attributes.hp.max === 0)`;\n\t}\n}\n","import EstimationProvider from \"./templates/Base.js\";\n\nexport default class ryuutamaEstimationProvider extends EstimationProvider {\n\tfraction(token) {\n\t\tconst hp = token.actor.system.hp;\n\t\treturn hp.value / hp.max;\n\t}\n}\n","import { isEmpty } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class scumAndVillainyEstimationProvider extends EstimationProvider {\n\tfraction(token) {\n\t\tconst hp = token.actor.system.harm;\n\t\tlet harmLevel = 0;\n\t\tfor (let [key, value] of Object.entries(hp)) {\n\t\t\tfor (let entry of Object.values(value)) {\n\t\t\t\tif (!isEmpty(entry)) {\n\t\t\t\t\t// Testing for empty or whitespace\n\t\t\t\t\tswitch (key) {\n\t\t\t\t\t\tcase \"light\":\n\t\t\t\t\t\t\tharmLevel += 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"medium\":\n\t\t\t\t\t\t\tharmLevel += 3;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"heavy\":\n\t\t\t\t\t\t\tharmLevel += 9;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"deadly\":\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 1 - (harmLevel / 18);\n\t}\n\n\tget breakCondition() {\n\t\treturn \"||token.actor.type === \\\"ship\\\"||token.actor.type === \\\"\\uD83D\\uDD5B clock\\\"||token.actor.type === \\\"universe\\\"\";\n\t}\n}\n","import { sGet, t } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class sfrpgEstimationProvider extends EstimationProvider {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.organicTypes.push(\"npc2\");\n\t\tthis.vehicleRules = {\n\t\t\tconfig: true,\n\t\t\tvehicles: [\"starship\", \"vehicle\"],\n\t\t};\n\t\tthis.addTemp = true;\n\t\tthis.breakOnZeroMaxHP = true;\n\t\tthis.estimations = [\n\t\t\t...this.estimations,\n\t\t\t{\n\t\t\t\tname: \"Vehicle Threshold\",\n\t\t\t\trule: \"type === \\\"vehicle\\\" && game.settings.get(\\\"healthEstimate\\\", \\\"starfinder.useThreshold\\\")\",\n\t\t\t\testimates: [\n\t\t\t\t\t{ value: 0, label: t(\"core.estimates.thresholds.0\") },\n\t\t\t\t\t{ value: 50, label: t(\"core.estimates.thresholds.1\") },\n\t\t\t\t\t{ value: 100, label: t(\"core.estimates.thresholds.2\") },\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Vehicles, Starships & Drones\",\n\t\t\t\trule: \"[\\\"starship\\\", \\\"vehicle\\\", \\\"drone\\\"].includes(type)\",\n\t\t\t\testimates: [\n\t\t\t\t\t{ value: 0, label: t(\"core.estimates.vehicles.0\") },\n\t\t\t\t\t{ value: 20, label: t(\"core.estimates.vehicles.1\") },\n\t\t\t\t\t{ value: 40, label: t(\"core.estimates.vehicles.2\") },\n\t\t\t\t\t{ value: 60, label: t(\"core.estimates.vehicles.3\") },\n\t\t\t\t\t{ value: 80, label: t(\"core.estimates.vehicles.4\") },\n\t\t\t\t\t{ value: 100, label: t(\"core.estimates.vehicles.5\") },\n\t\t\t\t],\n\t\t\t},\n\t\t];\n\t}\n\n\tfraction(token) {\n\t\tconst type = token.actor.type;\n\t\tconst hp = token.actor.system.attributes.hp;\n\t\tswitch (type) {\n\t\t\tcase \"npc\":\n\t\t\tcase \"npc2\":\n\t\t\tcase \"drone\": {\n\t\t\t\tconst temp = sGet(\"core.addTemp\") ? hp.temp ?? 0 : 0;\n\t\t\t\treturn Math.min((hp.value + temp) / hp.max, 1);\n\t\t\t}\n\t\t\tcase \"character\": {\n\t\t\t\tconst sp = token.actor.system.attributes.sp;\n\t\t\t\tconst addStamina = sGet(\"starfinder.addStamina\") ? 1 : 0;\n\t\t\t\tconst temp = sGet(\"core.addTemp\") ? hp.temp ?? 0 : 0;\n\t\t\t\treturn Math.min((hp.value + (sp.value * addStamina) + temp) / (hp.max + (sp.max * addStamina)), 1);\n\t\t\t}\n\t\t\tcase \"vehicle\":\n\t\t\t\tif (sGet(\"starfinder.useThreshold\")) {\n\t\t\t\t\tif (hp.value > hp.threshold) return 1;\n\t\t\t\t\telse if (hp.value > 0) return 0.5;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t// eslint-disable-next-line no-fallthrough\n\t\t\tcase \"starship\":\n\t\t\t\treturn hp.value / hp.max;\n\t\t}\n\t}\n\n\tget settings() {\n\t\treturn {\n\t\t\t\"starfinder.addStamina\": {\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: true,\n\t\t\t},\n\t\t\t\"starfinder.useThreshold\": {\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: false,\n\t\t\t},\n\t\t};\n\t}\n\n\tget breakCondition() {\n\t\treturn `\n        || ${this.isVehicle} && game.settings.get('healthEstimate', 'core.hideVehicleHP')\n        || token.actor.type === 'hazard'\n        || game.settings.get('healthEstimate', 'core.breakOnZeroMaxHP') && token.actor.system.attributes.hp.max === 0`;\n\t}\n}\n","import EstimationProvider from \"./templates/Base.js\";\n\nexport default class shadowrun5eEstimationProvider extends EstimationProvider {\n\tfraction(token) {\n\t\tswitch (token.actor.type) {\n\t\t\tcase \"character\":\n\t\t\tcase \"spirit\": {\n\t\t\t\tconst stun = token.actor.system.track.stun;\n\t\t\t\tconst physical = token.actor.system.track.physical;\n\t\t\t\treturn Math.min((stun.max - stun.value) / stun.max, (physical.max - physical.value) / physical.max);\n\t\t\t}\n\t\t\tcase \"vehicle\": {\n\t\t\t\tconst physical = token.actor.system.track.physical;\n\t\t\t\treturn (physical.max - physical.value) / physical.max;\n\t\t\t}\n\t\t\tcase \"sprite\": {\n\t\t\t\tconst matrix = token.actor.system.matrix.condition_monitor;\n\t\t\t\treturn (matrix.max - matrix.value) / matrix.max;\n\t\t\t}\n\t\t}\n\t}\n}\n","import EstimationProvider from \"./templates/Base.js\";\n\nexport default class splittermondEstimationProvider extends EstimationProvider {\n\tfraction(token) {\n\t\tconst hp = token.actor.system.health;\n\t\treturn hp.total.value / hp.max;\n\t}\n}\n","import { t } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class starwarsffgEstimationProvider extends EstimationProvider {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.vehicleRules = {\n\t\t\tconfig: true,\n\t\t\tvehicles: [\"vehicle\"],\n\t\t};\n\t\tthis.breakOnZeroMaxHP = true;\n\t\tthis.estimations = [\n\t\t\t...this.estimations,\n\t\t\t{\n\t\t\t\tname: \"Vehicles\",\n\t\t\t\trule: \"type === \\\"vehicle\\\"\",\n\t\t\t\testimates: [\n\t\t\t\t\t{ value: 0, label: t(\"core.estimates.vehicles.0\") },\n\t\t\t\t\t{ value: 20, label: t(\"core.estimates.vehicles.1\") },\n\t\t\t\t\t{ value: 40, label: t(\"core.estimates.vehicles.2\") },\n\t\t\t\t\t{ value: 60, label: t(\"core.estimates.vehicles.3\") },\n\t\t\t\t\t{ value: 80, label: t(\"core.estimates.vehicles.4\") },\n\t\t\t\t\t{ value: 100, label: t(\"core.estimates.vehicles.5\") },\n\t\t\t\t],\n\t\t\t},\n\t\t];\n\t}\n\n\tfraction(token) {\n\t\tlet hp = token.actor.system.stats.wounds;\n\t\tif (token.actor.type === \"vehicle\") {\n\t\t\thp = token.actor.system.stats.hullTrauma;\n\t\t}\n\t\treturn Math.min((hp.max - hp.value) / hp.max, 1);\n\t}\n\n\tget breakCondition() {\n\t\treturn `\n        || ${this.isVehicle} && game.settings.get('healthEstimate', 'core.hideVehicleHP')\n        || token.actor.type === 'hazard'\n        || token.actor.type === 'vehicle' && game.settings.get('healthEstimate', 'core.breakOnZeroMaxHP') &&token.actor.system.stats.hullTrauma.max === 0\n        || token.actor.type !== 'vehicle' && game.settings.get('healthEstimate', 'core.breakOnZeroMaxHP') && token.actor.system.stats.wounds.max === 0`;\n\t}\n}\n","import { sGet, t } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class swadeEstimationProvider extends EstimationProvider {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.vehicleRules.config = true;\n\t\tthis.deathStateName = game.i18n.localize(\"SWADE.Incap\");\n\t\tthis.deathMarker.config = game.modules.get(\"condition-lab-triggler\")?.active;\n\t\tthis.estimations = [\n\t\t\t{\n\t\t\t\tname: \"\",\n\t\t\t\trule: \"default\",\n\t\t\t\testimates: [\n\t\t\t\t\t{ value: 0, label: game.i18n.localize(\"SWADE.Incap\") },\n\t\t\t\t\t{ value: 25, label: t(\"core.estimates.states.1\") },\n\t\t\t\t\t{ value: 50, label: t(\"core.estimates.states.2\") },\n\t\t\t\t\t{ value: 99, label: t(\"core.estimates.states.3\") },\n\t\t\t\t\t{ value: 100, label: t(\"core.estimates.states.5\") },\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Vehicles\",\n\t\t\t\trule: \"type === \\\"vehicle\\\"\",\n\t\t\t\testimates: [\n\t\t\t\t\t{ value: 0, label: t(\"core.estimates.vehicles.0\") },\n\t\t\t\t\t{ value: 20, label: t(\"core.estimates.vehicles.1\") },\n\t\t\t\t\t{ value: 40, label: t(\"core.estimates.vehicles.2\") },\n\t\t\t\t\t{ value: 60, label: t(\"core.estimates.vehicles.3\") },\n\t\t\t\t\t{ value: 80, label: t(\"core.estimates.vehicles.4\") },\n\t\t\t\t\t{ value: 100, label: t(\"core.estimates.vehicles.5\") },\n\t\t\t\t],\n\t\t\t},\n\t\t];\n\t}\n\n\tfraction(token) {\n\t\tconst hp = token.actor.system.wounds;\n\t\tlet maxHP = Math.max(hp.max, 1);\n\t\tif (token.actor.system.wildcard) {\n\t\t\tconst defaultWildCardMaxWounds = sGet(\"swade.defaultWildCardMaxWounds\");\n\t\t\tmaxHP = 1 + Math.max(hp.max || defaultWildCardMaxWounds, 1);\n\t\t}\n\t\treturn (maxHP - hp.value) / maxHP;\n\t}\n\n\tget settings() {\n\t\treturn {\n\t\t\t\"swade.defaultWildCardMaxWounds\": {\n\t\t\t\ttype: Number,\n\t\t\t\tdefault: 3,\n\t\t\t\trange: {\n\t\t\t\t\tmin: 1,\n\t\t\t\t\tmax: 10,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n\n\ttokenEffects(token) {\n\t\tconst incapIcon = CONFIG.statusEffects.find((effect) => effect.id === \"incapacitated\").img;\n\t\treturn !!token.actor.effects.find((e) => e.img === incapIcon);\n\t}\n\n\tget breakCondition() {\n\t\treturn `|| ${this.isVehicle} && game.settings.get('healthEstimate', 'core.hideVehicleHP')`;\n\t}\n}\n","import EstimationProvider from \"./templates/Base.js\";\n\nexport default class swnrEstimationProvider extends EstimationProvider {\n\tfraction(token) {\n\t\tconst hp = token.actor.system.health;\n\t\treturn Math.min(hp.value / hp.max, 1);\n\t}\n}\n","import EstimationProvider from \"./templates/Base.js\";\n\nexport default class symbaroumEstimationProvider extends EstimationProvider {\n\tfraction(token) {\n\t\tconst hp = token.actor.system.health.toughness;\n\t\treturn hp.value / hp.max;\n\t}\n}\n","import { sGet, t } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class t2k4eEstimationProvider extends EstimationProvider {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.vehicleRules.config = true;\n\t\tthis.addTemp = true;\n\t\tthis.breakOnZeroMaxHP = true;\n\t\tthis.estimations = [\n\t\t\t...this.estimations,\n\t\t\t{\n\t\t\t\tname: \"Vehicles\",\n\t\t\t\trule: \"type === \\\"vehicle\\\"\",\n\t\t\t\testimates: [\n\t\t\t\t\t{ value: 0, label: t(\"core.estimates.vehicles.0\") },\n\t\t\t\t\t{ value: 20, label: t(\"core.estimates.vehicles.1\") },\n\t\t\t\t\t{ value: 40, label: t(\"core.estimates.vehicles.2\") },\n\t\t\t\t\t{ value: 60, label: t(\"core.estimates.vehicles.3\") },\n\t\t\t\t\t{ value: 80, label: t(\"core.estimates.vehicles.4\") },\n\t\t\t\t\t{ value: 100, label: t(\"core.estimates.vehicles.5\") },\n\t\t\t\t],\n\t\t\t},\n\t\t];\n\t}\n\n\tfraction(token) {\n\t\tconst type = token.actor.type;\n\t\tlet hp;\n\t\tif (type === \"vehicle\") {\n\t\t\thp = token.actor.system.reliability;\n\t\t} else {\n\t\t\thp = token.actor.system.health;\n\t\t}\n\t\tlet temp = 0;\n\t\tif (type !== \"vehicle\" && sGet(\"core.addTemp\")) {\n\t\t\ttemp = hp.temp;\n\t\t}\n\t\treturn Math.min((temp + hp.value) / hp.max, 1);\n\t}\n\n\tget breakCondition() {\n\t\treturn `\n        || ${this.isVehicle} && game.settings.get('healthEstimate', 'core.hideVehicleHP')\n\t\t|| token.actor.type == \"unit\"\n\t\t|| token.actor.type == \"party\"\n\t\t|| game.settings.get('healthEstimate', 'core.breakOnZeroMaxHP')\n\t\t\t&& (\n\t\t\t\t(${this.isVehicle} && token.actor.system.reliability.max === 0)\n\t\t\t\t|| (!${this.isVehicle} && token.actor.system.health.max === 0)\n\t\t\t)`;\n\t}\n}\n","import { sGet, t } from \"../../utils.js\";\nimport EstimationProvider from \"./Base.js\";\n\nexport default class GenericEstimationProvider extends EstimationProvider {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.addTemp = true;\n\t}\n\n\tfraction(token) {\n\t\tconst hpPath = sGet(\"core.custom.FractionHP\");\n\t\tlet hp;\n\t\tif (hpPath) {\n\t\t\thp = foundry.utils.getProperty(token, hpPath);\n\t\t} else {\n\t\t\tconst primaryTokenAttribute = game.system.primaryTokenAttribute;\n\n\t\t\thp = primaryTokenAttribute\n\t\t\t\t? foundry.utils.getProperty(token, `actor.system.${primaryTokenAttribute}`)\n\t\t\t\t: token.actor.system?.attributes?.hp || token.actor.system?.hp;\n\t\t}\n\t\tlet temp = 0;\n\t\tif (sGet(\"core.addTemp\")) temp = Number(hp?.temp) || 0;\n\n\t\tthis._checkValidHP(token, hp, hpPath);\n\t\tconst FractionMath = sGet(\"core.custom.FractionMath\");\n\t\tswitch (FractionMath) {\n\t\t\tcase 0:\n\t\t\t\treturn Math.min((Number(hp.value) + temp) / Number(hp.max), 1);\n\t\t\tcase 1:\n\t\t\tdefault:\n\t\t\t\treturn (Number(hp.max) + temp - Number(hp.value)) / (Number(hp.max) + temp);\n\t\t}\n\t}\n\n\tget settings() {\n\t\treturn {\n\t\t\t\"core.custom.FractionHP\": {\n\t\t\t\ttype: String,\n\t\t\t\tdefault: \"\",\n\t\t\t},\n\t\t\t\"core.custom.FractionMath\": {\n\t\t\t\ttype: Number,\n\t\t\t\tdefault: 0,\n\t\t\t\tchoices: {\n\t\t\t\t\t0: t(\"core.custom.FractionMath.choices.0\"),\n\t\t\t\t\t1: t(\"core.custom.FractionMath.choices.1\"),\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n}\n","import EstimationProvider from \"./templates/Base.js\";\n\nexport default class tor2eEstimationProvider extends EstimationProvider {\n\tfraction(token) {\n\t\tswitch (token.actor.type) {\n\t\t\tcase \"character\": {\n\t\t\t\tconst hp = token.actor.system.resources.endurance;\n\t\t\t\treturn hp.value / hp.max;\n\t\t\t}\n\t\t\tcase \"adversary\": {\n\t\t\t\tconst hp = token.actor.system.endurance;\n\t\t\t\treturn hp.value / hp.max;\n\t\t\t}\n\t\t\tcase \"npc\": {\n\t\t\t\tconst hp = token.actor.system.endurance;\n\t\t\t\treturn hp.value / hp.max;\n\t\t\t}\n\t\t}\n\t}\n}\n","import { sGet } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class tormenta20EstimationProvider extends EstimationProvider {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.addTemp = true;\n\t\tthis.breakOnZeroMaxHP = true;\n\t}\n\n\tfraction(token) {\n\t\tconst hp = token.actor.system.attributes.pv;\n\t\tlet temp = 0;\n\t\tif (token.actor.type === \"character\" && sGet(\"core.addTemp\")) {\n\t\t\ttemp = hp.temp;\n\t\t}\n\t\treturn Math.min((temp + hp.value) / hp.max, 1);\n\t}\n\n\tget breakCondition() {\n\t\treturn \"||game.settings.get('healthEstimate', 'core.breakOnZeroMaxHP') && token.actor.system.attributes.pv.max === 0\";\n\t}\n}\n","import { sGet } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class trpgEstimationProvider extends EstimationProvider {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.addTemp = true;\n\t\tthis.breakOnZeroMaxHP = true;\n\t}\n\n\tfraction(token) {\n\t\tconst hp = token.actor.system.attributes.hp;\n\t\tlet temp = 0;\n\t\tif (token.actor.type === \"character\" && sGet(\"core.addTemp\")) {\n\t\t\ttemp = hp.temp;\n\t\t}\n\t\treturn Math.min((temp + hp.value) / hp.max, 1);\n\t}\n\n\tget breakCondition() {\n\t\treturn \"||game.settings.get('healthEstimate', 'core.breakOnZeroMaxHP') && token.actor.system.attributes.hp.max === 0\";\n\t}\n}\n","import { t } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class twodsixEstimationProvider extends EstimationProvider {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.vehicleRules = {\n\t\t\tconfig: true,\n\t\t\tvehicles: [\"vehicle\", \"ship\"],\n\t\t};\n\t\tthis.breakOnZeroMaxHP = true;\n\t\tthis.estimations = [\n\t\t\t...this.estimations,\n\t\t\t{\n\t\t\t\tname: \"Vehicles\",\n\t\t\t\trule: \"type === \\\"vehicle\\\" || type === \\\"ship\\\"\",\n\t\t\t\testimates: [\n\t\t\t\t\t{ value: 0, label: t(\"core.estimates.vehicles.0\") },\n\t\t\t\t\t{ value: 20, label: t(\"core.estimates.vehicles.1\") },\n\t\t\t\t\t{ value: 40, label: t(\"core.estimates.vehicles.2\") },\n\t\t\t\t\t{ value: 60, label: t(\"core.estimates.vehicles.3\") },\n\t\t\t\t\t{ value: 80, label: t(\"core.estimates.vehicles.4\") },\n\t\t\t\t\t{ value: 100, label: t(\"core.estimates.vehicles.5\") },\n\t\t\t\t],\n\t\t\t},\n\t\t];\n\t}\n\n\tfraction(token) {\n\t\tswitch (token.actor.type) {\n\t\t\tcase \"traveller\":\n\t\t\tcase \"robot\":\n\t\t\tcase \"animal\": {\n\t\t\t\tconst hp = token.actor.system.hits;\n\t\t\t\treturn hp.value / hp.max;\n\t\t\t}\n\t\t\tcase \"ship\": {\n\t\t\t\tconst hp = token.actor.system.shipStats.hull;\n\t\t\t\treturn hp.value / hp.max;\n\t\t\t}\n\t\t\tcase \"space-object\": {\n\t\t\t\tconst hp = token.actor.system.count;\n\t\t\t\treturn hp.value / hp.max;\n\t\t\t}\n\t\t\tcase \"vehicle\": {\n\t\t\t\tlet max = 0;\n\t\t\t\tlet current = 0;\n\t\t\t\tconst status = token.actor.system.systemStatus;\n\t\t\t\tfor (let sys in status) {\n\t\t\t\t\tswitch (status[sys]) {\n\t\t\t\t\t\tcase \"operational\": {\n\t\t\t\t\t\t\tmax += 2;\n\t\t\t\t\t\t\tcurrent += 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase \"damaged\": {\n\t\t\t\t\t\t\tmax += 2;\n\t\t\t\t\t\t\tcurrent += 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase \"destroyed\": {\n\t\t\t\t\t\t\tmax += 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase \"off\": {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn current / max;\n\t\t\t}\n\t\t}\n\t}\n\n\tget breakCondition() {\n\t\treturn `\n        || ${this.isVehicle} && game.settings.get('healthEstimate', 'core.hideVehicleHP')\n\t\t|| token.actor.type !== \"vehicle\"\n\t\t\t&& game.settings.get('healthEstimate', 'core.breakOnZeroMaxHP')\n\t\t\t&& (token.actor.system?.hits?.max === 0 || token.actor.system?.shipStats?.hull.max === 0) || token.actor.system?.count?.max === 0`;\n\t}\n}\n","import EstimationProvider from \"./templates/Base.js\";\n\nexport default class uesrpgEstimationProvider extends EstimationProvider {\n\tfraction(token) {\n\t\tconst hp = token.actor.system.hp;\n\t\treturn hp.value / hp.max;\n\t}\n}\n","import EstimationProvider from \"./templates/Base.js\";\n\nexport default class weirdwizardEstimationProvider extends EstimationProvider {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.deathStateName = game.i18n.localize(\"WW.Health.Estimation.Dead\");\n\t\tthis.estimations = [\n\t\t\t{\n\t\t\t\tname: \"\",\n\t\t\t\trule: \"default\",\n\t\t\t\testimates: [\n\t\t\t\t\t{ value: 0, label: game.i18n.localize(\"WW.Health.Estimation.100\") },\n\t\t\t\t\t{ value: 25, label: game.i18n.localize(\"WW.Health.Estimation.75\") },\n\t\t\t\t\t{ value: 50, label: game.i18n.localize(\"WW.Health.Estimation.50\") },\n\t\t\t\t\t{ value: 75, label: game.i18n.localize(\"WW.Health.Estimation.25\") },\n\t\t\t\t\t{ value: 99.99, label: game.i18n.localize(\"WW.Health.Estimation.1\") },\n\t\t\t\t\t{ value: 100, label: game.i18n.localize(\"WW.Health.Estimation.0\") }\n\t\t\t\t],\n\t\t\t},\n\t\t];\n\t}\n\n\tfraction(token) {\n\t\tconst hp = token.actor.system.stats.damage;\n\t\treturn (hp.max - hp.value) / hp.max;\n\t}\n}\n","import { t } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class wfrp4eEstimationProvider extends EstimationProvider {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.vehicleRules.config = true;\n\t\tthis.breakOnZeroMaxHP = true;\n\t\tthis.estimations = [\n\t\t\t...this.estimations,\n\t\t\t{\n\t\t\t\tname: \"Vehicles\",\n\t\t\t\trule: \"type === \\\"vehicle\\\"\",\n\t\t\t\testimates: [\n\t\t\t\t\t{ value: 0, label: t(\"core.estimates.vehicles.0\") },\n\t\t\t\t\t{ value: 20, label: t(\"core.estimates.vehicles.1\") },\n\t\t\t\t\t{ value: 40, label: t(\"core.estimates.vehicles.2\") },\n\t\t\t\t\t{ value: 60, label: t(\"core.estimates.vehicles.3\") },\n\t\t\t\t\t{ value: 80, label: t(\"core.estimates.vehicles.4\") },\n\t\t\t\t\t{ value: 100, label: t(\"core.estimates.vehicles.5\") },\n\t\t\t\t],\n\t\t\t},\n\t\t];\n\t}\n\n\tfraction(token) {\n\t\tconst hp = token.actor.system.status.wounds;\n\t\treturn hp.value / hp.max;\n\t}\n\n\tget breakCondition() {\n\t\treturn `\n        || ${this.isVehicle} && game.settings.get('healthEstimate', 'core.hideVehicleHP')\n\t\t|| (game.settings.get('healthEstimate', 'core.breakOnZeroMaxHP') && token.actor.system.status.wounds === 0)`;\n\t}\n}\n","import { sGet } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class worldbuildingEstimationProvider extends EstimationProvider {\n\tfraction(token) {\n\t\t/* Can't think of a different way to do it that doesn't involve FS manipulation, which is its own can of worms */\n\t\tconst setting = sGet(\"worldbuilding.simpleRule\");\n\t\t// eslint-disable-next-line no-new-func\n\t\treturn Function(\"token\", setting)(token);\n\t}\n\n\tget settings() {\n\t\treturn {\n\t\t\t\"worldbuilding.simpleRule\": {\n\t\t\t\ttype: String,\n\t\t\t\tdefault: \"const hp = token.actor.system.health; return hp.value / hp.max\",\n\t\t\t},\n\t\t};\n\t}\n}\n","import { sGet } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class wrathAndGloryEstimationProvider extends EstimationProvider {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.addTemp = true;\n\t\tthis.breakOnZeroMaxHP = true;\n\t\tthis.organicTypes = [\"agent\", \"threat\"];\n\t}\n\n\tfraction(token) {\n\t\tconst hp = token.actor.system.combat.wounds;\n\t\tlet temp = 0;\n\t\tif (sGet(\"core.addTemp\")) temp = Number(hp.bonus);\n\t\treturn (Number(hp.max) + temp - Number(hp.value)) / (Number(hp.max) + temp);\n\t}\n\n\tget breakCondition() {\n\t\treturn \"|| (game.settings.get('healthEstimate', 'core.breakOnZeroMaxHP') && token.actor.system.combat.wounds.max === 0)\";\n\t}\n}\n","import { t } from \"../utils.js\";\nimport EstimationProvider from \"./templates/Base.js\";\n\nexport default class yzecoriolisEstimationProvider extends EstimationProvider {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.breakOnZeroMaxHP = true;\n\t\tthis.estimations = [\n\t\t\t...this.estimations,\n\t\t\t{\n\t\t\t\tname: \"Ships\",\n\t\t\t\trule: \"type === \\\"ship\\\"\",\n\t\t\t\testimates: [\n\t\t\t\t\t{ value: 0, label: t(\"core.estimates.vehicles.0\") },\n\t\t\t\t\t{ value: 20, label: t(\"core.estimates.vehicles.1\") },\n\t\t\t\t\t{ value: 40, label: t(\"core.estimates.vehicles.2\") },\n\t\t\t\t\t{ value: 60, label: t(\"core.estimates.vehicles.3\") },\n\t\t\t\t\t{ value: 80, label: t(\"core.estimates.vehicles.4\") },\n\t\t\t\t\t{ value: 100, label: t(\"core.estimates.vehicles.5\") },\n\t\t\t\t],\n\t\t\t},\n\t\t];\n\t}\n\n\tfraction(token) {\n\t\tconst type = token.actor.type;\n\t\tlet hp;\n\t\tif (type === \"ship\") {\n\t\t\thp = token.actor.system.hullPoints;\n\t\t} else hp = token.actor.system.hitPoints;\n\t\treturn hp.value / hp.max;\n\t}\n}\n","/** Providers whose systems use \"-\" in their names */\nexport const providerKeys = {\n\t\"age-system\": \"ageSystem\",\n\t\"band-of-blades\": \"bandOfBlades\",\n\t\"blade-runner\": \"bladeRunner\",\n\t\"blades-in-the-dark\": \"bladesInTheDark\",\n\t\"custom-system-builder\": \"CustomSystemBuilder\",\n\t\"cyberpunk-red-core\": \"cyberpunkRedCore\",\n\t\"forbidden-lands\": \"forbiddenLands\",\n\t\"foundryvtt-reve-de-dragon\": \"reveDeDragon\",\n\t\"scum-and-villainy\": \"scumAndVillainy\",\n\t\"uesrpg-d100\": \"uesrpg\",\n\t\"wrath-and-glory\": \"wrathAndGlory\",\n};\n","import { settingData, sGet, sSet } from \"../../utils.js\";\n\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\nexport class HealthEstimateSettingsV2 extends HandlebarsApplicationMixin(ApplicationV2) {\n\tpath = \"core\";\n\n\tstatic DEFAULT_OPTIONS = {\n\t\tclasses: [\"form\", \"healthEstimate\"],\n\t\tposition: {\n\t\t\twidth: 640,\n\t\t\theight: \"auto\",\n\t\t},\n\t\tform: {\n\t\t\thandler: HealthEstimateSettingsV2.#onSubmit,\n\t\t\tcloseOnSubmit: true,\n\t\t},\n\t\ttag: \"form\",\n\t\twindow: {\n\t\t\tcontentClasses: [\"standard-form\"],\n\t\t},\n\t};\n\n\tstatic PARTS = {\n\t\tfooter: {\n\t\t\ttemplate: \"templates/generic/form-footer.hbs\",\n\t\t},\n\t};\n\n\t_getButtons() {\n\t\treturn [\n\t\t\t{ type: \"submit\", icon: \"fa-solid fa-save\", label: \"SETTINGS.Save\" },\n\t\t\t{ type: \"reset\", action: \"reset\", icon: \"fa-solid fa-undo\", label: \"SETTINGS.Reset\" },\n\t\t];\n\t}\n\n\tget title() {\n\t\treturn `Health Estimate: ${game.i18n.localize(this.options.window.title)}`;\n\t}\n\n\tprepSelection(key) {\n\t\tconst path = `${this.path}.${key}`;\n\t\tconst data = settingData(path);\n\t\tconst { name, hint } = data;\n\t\tconst selected = sGet(path);\n\t\tconst select = Object.entries(data.choices).map(([key, value]) => ({ key, value }));\n\t\treturn { select, name, hint, selected };\n\t}\n\n\tprepSetting(key) {\n\t\tconst path = `${this.path}.${key}`;\n\t\tconst { name, hint } = settingData(path);\n\t\treturn {\n\t\t\tvalue: sGet(path),\n\t\t\tname,\n\t\t\thint,\n\t\t};\n\t}\n\n\tasync resetToDefault(key) {\n\t\tconst path = `core.${key}`;\n\t\tconst defaultValue = game.settings.settings.get(`healthEstimate.${path}`).default;\n\t\tawait game.settings.set(\"healthEstimate\", path, defaultValue);\n\t\tif (game.healthEstimate.alwaysShow) canvas.scene?.tokens.forEach((token) => token.object.refresh());\n\t}\n\n\t/**\n\t * Executes on form submission\n\t * @param {Event} event - the form submission event\n\t * @param {Object} formData - the form data\n\t */\n\tstatic async #onSubmit(event, form, formData) {\n\t\tconst settings = foundry.utils.expandObject(formData.object);\n\t\tawait Promise.all(Object.entries(settings).map(([key, value]) => sSet(`core.${key}`, value)));\n\t\tif (game.healthEstimate.alwaysShow) canvas.scene?.tokens.forEach((token) => token.object.refresh());\n\t}\n}\n","import { HealthEstimateSettingsV2 } from \"./templates/BaseV2.js\";\n\nexport default class HealthEstimateBehaviorSettings extends HealthEstimateSettingsV2 {\n\tstatic DEFAULT_OPTIONS = {\n\t\tid: \"health-estimate-behavior-form\",\n\t\tactions: {\n\t\t\treset: HealthEstimateBehaviorSettings.reset,\n\t\t},\n\t\twindow: {\n\t\t\ticon: \"fas fa-gear\",\n\t\t\ttitle: \"healthEstimate.core.menuSettings.behaviorSettings.plural\",\n\t\t},\n\t};\n\n\tstatic PARTS = {\n\t\tform: {\n\t\t\tid: \"health-estimate-behavior-form\",\n\t\t\ttemplate: \"./modules/healthEstimate/templates/behaviorSettings.hbs\",\n\t\t},\n\t\t...HealthEstimateSettingsV2.PARTS,\n\t};\n\n\t_prepareContext(options) {\n\t\treturn {\n\t\t\talwaysShow: this.prepSetting(\"alwaysShow\"),\n\t\t\tcombatOnly: this.prepSetting(\"combatOnly\"),\n\t\t\tshowDescription: this.prepSelection(\"showDescription\"),\n\t\t\tshowDescriptionTokenType: this.prepSelection(\"showDescriptionTokenType\"),\n\n\t\t\tdeathState: this.prepSetting(\"deathState\"),\n\t\t\tdeathStateName: this.prepSetting(\"deathStateName\"),\n\t\t\tNPCsJustDie: this.prepSetting(\"NPCsJustDie\"),\n\t\t\tdeathMarkerEnabled: game.healthEstimate.estimationProvider.deathMarker.config,\n\t\t\tdeathMarker: this.prepSetting(\"deathMarker\"),\n\t\t\tbuttons: this._getButtons(),\n\t\t};\n\t}\n\n\tstatic async reset(event, form, formData) {\n\t\tconst paths = [\n\t\t\t\"alwaysShow\",\n\t\t\t\"combatOnly\",\n\t\t\t\"showDescription\",\n\t\t\t\"showDescriptionTokenType\",\n\t\t\t\"deathState\",\n\t\t\t\"deathStateName\",\n\t\t\t\"NPCsJustDie\",\n\t\t\t\"deathMarker\",\n\t\t];\n\n\t\tawait Promise.all(paths.map(this.resetToDefault));\n\t\tcanvas.scene?.tokens.forEach((token) => token.object.refresh());\n\t\tthis.close();\n\t}\n}\n","import { settingData, sGet, sSet } from \"../../utils.js\";\n\nexport class HealthEstimateSettings extends FormApplication {\n\tconstructor(object, options = {}) {\n\t\tsuper(object, options);\n\t\t/** Set path property */\n\t\tthis.path = \"core\";\n\t}\n\n\t/**\n\t * Default Options for this FormApplication\n\t */\n\tstatic get defaultOptions() {\n\t\treturn foundry.utils.mergeObject(super.defaultOptions, {\n\t\t\tclasses: [\"form\", \"healthEstimate\"],\n\t\t\twidth: 640,\n\t\t\theight: \"fit-content\",\n\t\t\tcloseOnSubmit: true,\n\t\t});\n\t}\n\n\tprepSelection(key) {\n\t\tconst path = `${this.path}.${key}`;\n\t\tconst data = settingData(path);\n\t\tconst { name, hint } = data;\n\t\tconst selected = sGet(path);\n\t\tconst select = Object.entries(data.choices).map(([key, value]) => ({ key, value }));\n\t\treturn { select, name, hint, selected };\n\t}\n\n\tprepSetting(key) {\n\t\tconst path = `${this.path}.${key}`;\n\t\tconst { name, hint } = settingData(path);\n\t\treturn {\n\t\t\tvalue: sGet(path),\n\t\t\tname,\n\t\t\thint,\n\t\t};\n\t}\n\n\tasync resetToDefault(key) {\n\t\tconst path = `core.${key}`;\n\t\tconst defaultValue = game.settings.settings.get(`healthEstimate.${path}`).default;\n\t\tawait game.settings.set(\"healthEstimate\", path, defaultValue);\n\t\tif (game.healthEstimate.alwaysShow) canvas.scene?.tokens.forEach((token) => token.object.refresh());\n\t}\n\n\t/**\n\t * Executes on form submission\n\t * @param {Event} event - the form submission event\n\t * @param {Object} formData - the form data\n\t */\n\tasync _updateObject(event, formData) {\n\t\tawait Promise.all(\n\t\t\tObject.entries(formData).map(async ([key, value]) => {\n\t\t\t\tlet current = game.settings.get(\"healthEstimate\", `core.${key}`);\n\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\tif (value != current) await sSet(`core.${key}`, value);\n\t\t\t})\n\t\t);\n\t\tif (game.healthEstimate.alwaysShow) canvas.scene?.tokens.forEach((token) => token.object.refresh());\n\t}\n}\n","import { sGet, t } from \"../utils.js\";\nimport { HealthEstimateSettings } from \"./templates/Base.js\";\n\nexport default class HealthEstimateEstimationSettings extends HealthEstimateSettings {\n\tconstructor(object, options = {}) {\n\t\tsuper(object, options);\n\t\tthis.estimations = foundry.utils.deepClone(sGet(\"core.estimations\"));\n\t\tthis.changeTabs = null;\n\t}\n\n\tstatic get defaultOptions() {\n\t\treturn foundry.utils.mergeObject(super.defaultOptions, {\n\t\t\tid: \"health-estimate-estimation-form\",\n\t\t\ttitle: `Health Estimate: ${t(\"core.estimationSettings.title\")}`,\n\t\t\ttemplate: \"./modules/healthEstimate/templates/EstimationSettings.hbs\",\n\t\t\tclasses: [\"form\", \"healthEstimate\", \"estimationSettings\"],\n\t\t\theight: \"auto\",\n\t\t\ttabs: [{ navSelector: \".tabs\", contentSelector: \".content\", initial: \"behavior\" }],\n\t\t});\n\t}\n\n\tgetData(options) {\n\t\treturn {\n\t\t\testimations: this.estimations,\n\t\t};\n\t}\n\n\t/**\n\t * This is the earliest method called after render() where changing tabs can be called\n\t * @param {*} html\n\t */\n\t_activateCoreListeners(html) {\n\t\tsuper._activateCoreListeners(html);\n\t\tif (this.changeTabs !== null) {\n\t\t\tconst tabName = this.changeTabs.toString();\n\t\t\tif (tabName !== this._tabs[0].active) this._tabs[0].activate(tabName);\n\t\t\tthis.changeTabs = null;\n\t\t}\n\t}\n\n\tasync activateListeners(html) {\n\t\tsuper.activateListeners(html);\n\t\thtml.find(\"button[name=reset]\").on(\"click\", async (event) => {\n\t\t\tawait this.resetToDefault(\"estimations\");\n\t\t\tthis.estimations = sGet(\"core.estimations\");\n\t\t\tcanvas.scene?.tokens.forEach((token) => token.object.refresh());\n\t\t\tthis.close();\n\t\t});\n\n\t\t// Handle all changes to tables\n\t\thtml.find(\"a[data-action=add-table]\").on(\"click\", (event) => {\n\t\t\tthis.changeTabs = this.estimations.length;\n\t\t\tthis.estimations.push({\n\t\t\t\tname: \"\",\n\t\t\t\trule: \"\",\n\t\t\t\testimates: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: t(\"core.estimates.worst\"),\n\t\t\t\t\t\tvalue: 0,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: t(\"core.estimates.best\"),\n\t\t\t\t\t\tvalue: 100,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t\tthis.render();\n\t\t});\n\t\thtml.find(\"button[data-action=table-delete]\").on(\"click\", (event) => {\n\t\t\tconst { idx } = event.target.dataset ?? {};\n\t\t\tthis.estimations.splice(Number(idx), 1);\n\t\t\tthis.changeTabs = Number(idx) - 1;\n\t\t\tthis.render();\n\t\t});\n\t\thtml.find(\"button[data-action=change-prio]\").on(\"click\", (event) => {\n\t\t\tconst prio = event.target?.dataset.prio === \"increase\" ? -1 : 1;\n\t\t\tconst idx = Number(event.target?.dataset.idx);\n\n\t\t\tconst arraymove = (arr, fromIndex, toIndex) => {\n\t\t\t\tconst element = arr[fromIndex];\n\t\t\t\tarr.splice(fromIndex, 1);\n\t\t\t\tarr.splice(toIndex, 0, element);\n\t\t\t};\n\n\t\t\tarraymove(this.estimations, idx, idx + prio);\n\t\t\tthis.changeTabs = idx + prio;\n\t\t\tthis.render();\n\t\t});\n\t\tfor (const input of html[0].querySelectorAll(\".form-group input, .form-group textarea\")) {\n\t\t\tinput.addEventListener(\"change\", (event) => {\n\t\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\t\tconst [_, tableIndex, property] = event.target.name.split(\".\");\n\t\t\t\tthis.estimations[tableIndex][property] = event.target.value;\n\t\t\t\tevent.preventDefault();\n\t\t\t});\n\t\t}\n\n\t\t// Handle all changes for estimations\n\t\thtml.find(\"[data-action=estimation-add]\").on(\"click\", (event) => {\n\t\t\t// Fix for clicking either the A or I tag\n\t\t\tconst idx = Number(event.target?.dataset.idx ?? event.target?.children[0]?.dataset.idx);\n\t\t\tthis.estimations[idx].estimates.push({ label: \"Custom\", value: 100 });\n\t\t\tthis.render();\n\t\t});\n\t\tfor (const element of html[0].querySelectorAll(\"[data-action=estimation-delete]\")) {\n\t\t\telement.addEventListener(\"click\", async (event) => {\n\t\t\t\tconst { table, idx } = event.target?.dataset ?? {};\n\t\t\t\tif (idx) this.estimations[table].estimates.splice(Number(idx), 1);\n\t\t\t\tthis.render();\n\t\t\t});\n\t\t}\n\t\tfor (const element of html[0].querySelectorAll(\".estimation-types input\")) {\n\t\t\telement.addEventListener(\"change\", async (event) => {\n\t\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\t\tconst [_, table, tableIndex, estimateIndex, rule] = event.target?.name.split(\".\") ?? [];\n\t\t\t\tif (this.estimations[table]?.estimates?.[estimateIndex]?.[rule]) {\n\t\t\t\t\tthis.estimations[table].estimates[estimateIndex][rule] = event.target?.value;\n\t\t\t\t}\n\t\t\t\tevent.preventDefault();\n\t\t\t});\n\t\t}\n\t}\n\n\t_getSubmitData(updateData) {\n\t\tconst original = super._getSubmitData(updateData);\n\t\tconst data = expandObject(original);\n\t\tconst estimations = [];\n\t\tfor (const key in data.estimations) {\n\t\t\tconst { name, rule, ignoreColor, estimates } = data.estimations[key];\n\t\t\tconst sortedEstimates = Object.keys(estimates)\n\t\t\t\t.sort((a, b) => estimates[a].value - estimates[b].value)\n\t\t\t\t.map((innerKey) => estimates[innerKey]);\n\t\t\testimations.push({ name, rule, ignoreColor, estimates: sortedEstimates });\n\t\t}\n\t\treturn { estimations };\n\t}\n}\n","import { sGet, sSet } from \"../utils.js\";\nimport { HealthEstimateSettingsV2 } from \"./templates/BaseV2.js\";\n\nexport default class HealthEstimateStyleSettings extends HealthEstimateSettingsV2 {\n\tgradColors = [];\n\n\tpath = \"core.menuSettings\";\n\n\tstatic DEFAULT_OPTIONS = {\n\t\tid: \"health-estimate-style-form\",\n\t\tactions: {\n\t\t\treset: HealthEstimateStyleSettings.reset,\n\t\t},\n\t\tform: {\n\t\t\thandler: HealthEstimateStyleSettings.#onSubmit,\n\t\t},\n\t\twindow: {\n\t\t\ticon: \"fas fa-palette\",\n\t\t\ttitle: \"healthEstimate.core.menuSettings.styleSettings.plural\",\n\t\t},\n\t};\n\n\tstatic PARTS = {\n\t\tform: {\n\t\t\tid: \"health-estimate-style-form\",\n\t\t\ttemplate: \"./modules/healthEstimate/templates/styleSettings.hbs\",\n\t\t},\n\t\t...HealthEstimateSettingsV2.PARTS,\n\t};\n\n\t_prepareContext(options) {\n\t\treturn {\n\t\t\tfontFamily: this.prepSelection(\"fontFamily\"),\n\t\t\tuseColor: this.prepSetting(\"useColor\"),\n\t\t\tsmoothGradient: this.prepSetting(\"smoothGradient\"),\n\t\t\tdeadColor: this.prepSetting(\"deadColor\"),\n\t\t\tfontSize: this.prepSetting(\"fontSize\"),\n\t\t\tposition: this.prepSetting(\"position\"),\n\t\t\tposition2: this.prepSelection(\"position2\"),\n\t\t\tmode: this.prepSelection(\"mode\"),\n\t\t\toutline: this.prepSelection(\"outline\"),\n\t\t\toutlineIntensity: this.prepSetting(\"outlineIntensity\"),\n\t\t\tscaleToGridSize: this.prepSetting(\"scaleToGridSize\"),\n\t\t\tscaleToZoom: this.prepSetting(\"scaleToZoom\"),\n\t\t\tdeadText: game.settings.get(\"healthEstimate\", \"core.deathStateName\"),\n\t\t\tbuttons: this._getButtons(),\n\t\t};\n\t}\n\n\t_onRender(context, options) {\n\t\tconst gradientPositions = game.settings.get(\"healthEstimate\", \"core.menuSettings.gradient\");\n\t\tconst mode = this.element.querySelector(\"#mode\");\n\t\tconst useColorCheckbox = this.element.querySelector('input[name=\"useColor\"]');\n\n\t\tthis.fontFamily = this.element.querySelector(\"#fontFamily\");\n\t\tthis.useColor = sGet(\"core.menuSettings.useColor\");\n\n\t\tthis.deadColor = this.element.querySelector(\"color-picker[name=deadColor]\");\n\t\tthis.deadOutline = sGet(\"core.variables.deadOutline\");\n\n\t\tthis.outlineMode = this.element.querySelector(\"#outlineMode\");\n\t\tthis.outlineIntensity = this.element.querySelector(\"input[name=outlineIntensity]\");\n\t\tthis.fontSize = this.element.querySelector(\"input[name=fontSize]\");\n\t\tthis.textPosition = this.element.querySelector(\"input[name=position]\");\n\t\tthis.smoothGradient = this.element.querySelector(\"#smoothGradient\");\n\t\tthis.gradEx = this.element.querySelector(\"#gradientExampleHE\");\n\n\t\tthis.fontSize.value = Number.isNumeric(this.fontSize.value) ? this.fontSize.value : 24;\n\t\tthis.textPosition.value = Number.isNumeric(this.textPosition.value) ? this.textPosition.value : 0;\n\n\t\tconst gradientForm = this.element.querySelector('div[class=\"form-group gradient\"]');\n\n\t\tthis.hideForm(this.smoothGradient.parentElement, this.useColor);\n\t\tthis.hideForm(gradientForm, this.useColor);\n\t\tthis.hideForm(this.deadColor.parentElement, this.useColor);\n\t\tthis.hideForm(this.outlineMode.parentElement, this.useColor);\n\n\t\tthis.gp = new Grapick({\n\t\t\tel: \"#gradientControlsHE\",\n\t\t\tcolorEl: '<input id=\"colorpicker\"/>',\n\t\t});\n\t\tthis.gp.setColorPicker((handler) => {\n\t\t\tconst el = handler.getEl().querySelector(\"#colorpicker\");\n\n\t\t\t$(el).spectrum({\n\t\t\t\tcolor: handler.getColor(),\n\t\t\t\tshowAlpha: false,\n\t\t\t\tchange(color) {\n\t\t\t\t\thandler.setColor(color.toRgbString());\n\t\t\t\t},\n\t\t\t\tmove(color) {\n\t\t\t\t\thandler.setColor(color.toRgbString(), 0);\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t\tthis.setHandlers(gradientPositions).then(() => {\n\t\t\tthis.updateGradientFunction();\n\t\t});\n\n\t\tthis.deadColor.addEventListener(\"change\", (ev) => {\n\t\t\tthis.deadOutline = this.outlFn(ev.target.value);\n\t\t\t// this.deadColor.value = ev.target.value;\n\t\t\tthis.updateSample();\n\t\t});\n\t\tuseColorCheckbox.addEventListener(\"change\", (ev) => {\n\t\t\tthis.useColor = !this.useColor;\n\t\t\tthis.updateSample();\n\t\t\tthis.hideForm(this.smoothGradient.parentElement, ev.target.checked);\n\t\t\tthis.hideForm(gradientForm, ev.target.checked);\n\t\t\tthis.hideForm(this.deadColor.parentElement, ev.target.checked);\n\t\t\tthis.hideForm(this.outlineMode.parentElement, ev.target.checked);\n\t\t});\n\n\t\tfor (const range of this.element.querySelectorAll(\"input[type=range]\")) {\n\t\t\trange.addEventListener(\"change\", (event) => {\n\t\t\t\trange.nextElementSibling.innerHTML = event.target.value;\n\t\t\t});\n\t\t}\n\t\tthis.gp.on(\"change\", (complete) => {\n\t\t\tthis.updateGradient();\n\t\t});\n\t\tfor (let el of [this.outlineIntensity, this.outlineMode, mode]) {\n\t\t\tel.addEventListener(\"change\", () => {\n\t\t\t\tthis.updateGradientFunction();\n\t\t\t\tthis.updateSample();\n\t\t\t});\n\t\t}\n\t\tthis.smoothGradient.addEventListener(\"change\", () => {\n\t\t\tthis.updateGradient();\n\t\t});\n\t\tfor (let el of [this.fontFamily, this.fontSize, this.textPosition]) {\n\t\t\tel.addEventListener(\"change\", () => {\n\t\t\t\tthis.updateSample();\n\t\t\t});\n\t\t}\n\t}\n\n\thideForm(form, boolean) {\n\t\tform.style.display = !boolean ? \"none\" : \"flex\";\n\t}\n\n\tasync setHandlers(positions) {\n\t\tfor (let [i, v] of positions.colors.entries()) {\n\t\t\tthis.gp.addHandler(positions.positions[i] * 100, v);\n\t\t}\n\t}\n\n\tupdateGradientFunction() {\n\t\tconst mode = this.element.querySelector(\"#mode\").value;\n\t\t/**\n\t\t *\n\t\t * @param {Number} amount\n\t\t * @param {[String]} colors\n\t\t * @param {[Number]} colorPositions\n\t\t * @returns {[String]}\n\t\t */\n\t\tthis.gradFn = (amount, colors, colorPositions) => {\n\t\t\tif (mode === \"bez\") return chroma.bezier(colors).scale().domain(colorPositions).colors(amount);\n\t\t\treturn chroma.scale(colors).mode(mode).domain(colorPositions).colors(amount);\n\t\t};\n\n\t\tthis.updateOutlineFunction();\n\t\tthis.updateGradient();\n\t}\n\n\tupdateOutlineFunction() {\n\t\tconst outlineHandler = this.outlineMode.value;\n\t\tconst outlineAmount = this.outlineIntensity.value;\n\n\t\t/**\n\t\t * @param {Boolean} color\n\t\t * @returns {[String]}\n\t\t */\n\t\tthis.outlFn = (color = false) => {\n\t\t\tif (color) return chroma(color)[outlineHandler](outlineAmount).hex();\n\t\t\treturn this.gradColors.map((c) => chroma(c)[outlineHandler](outlineAmount).hex());\n\t\t};\n\t}\n\n\tupdateGradient() {\n\t\tthis.gradLength = this.smoothGradient.checked ? 100 : sGet(\"core.estimations\")[0].estimates.length;\n\t\tconst width = 100 / this.gradLength;\n\t\tconst colors = this.gp.handlers.map((a) => a.color);\n\t\tconst colorPositions = this.gp.handlers.map((a) => Math.round(a.position) / 100);\n\t\tthis.gradColors = this.gradFn(this.gradLength, colors, colorPositions);\n\t\tthis.outlColors = this.outlFn();\n\t\tlet gradString = \"\";\n\n\t\tfor (let i = 0; i < this.gradLength; i++) {\n\t\t\tgradString += `<span style=\"\n\t\t\t\t\tdisplay:inline-block;\n\t\t\t\t\theight:30px;\n\t\t\t\t\twidth:${width}%;\n\t\t\t\t\tbackground-color:${this.gradColors[i]};\n\t\t\t\t\"></span>`;\n\t\t}\n\t\tthis.gradEx.innerHTML = gradString;\n\t\tthis.updateSample();\n\t}\n\n\tupdateSample() {\n\t\tconst sample = this.element.querySelector(\"#healthEstimateSample\");\n\t\tconst sampleAnimation = this.element.querySelector(\"#SampleAnimation\");\n\t\tconst deadSample = this.element.querySelector(\"#healthEstimateSample\").children[0];\n\t\tconst deadColor = this.useColor ? this.deadColor.value : \"#FFF\";\n\t\tconst deadOutline = this.useColor ? this.deadOutline : \"#000\";\n\t\tsample.style.fontFamily = this.fontFamily.value;\n\t\tsample.style.fontSize = `${this.fontSize.value}px`;\n\n\t\tdeadSample.style.color = deadColor;\n\t\tdeadSample.style.textShadow = `-1px -1px 1px ${deadOutline}, 0 -1px 1px ${deadOutline}, 1px -1px 1px ${deadOutline},\n\t\t\t1px 0 1px ${deadOutline}, 1px 1px 1px ${deadOutline}, 0 1px 1px ${deadOutline},\n\t\t\t-1px 1px 1px ${deadOutline}, -1px 0 1px ${deadOutline}`;\n\n\t\tif (this.useColor) {\n\t\t\tsampleAnimation.classList.add(\"healthEstimateAnimate\");\n\t\t\tfor (let i = 1; i <= 6; i++) {\n\t\t\t\tconst index = Math.round(this.gradLength * ((i - 1) / 5));\n\t\t\t\tconst position = Math.max(index - 1, 0);\n\t\t\t\tconst keyframe = `--healthEstimate-keyframe-${index}`;\n\t\t\t\tconst outlineKeyframe = `${keyframe}-outline`;\n\t\t\t\tconst gradColor = this.gradColors[position];\n\t\t\t\tconst outlColor = this.outlColors[position];\n\n\t\t\t\tdocument.documentElement.style.setProperty(keyframe, gradColor);\n\t\t\t\tdocument.documentElement.style.setProperty(outlineKeyframe, outlColor);\n\t\t\t}\n\t\t} else {\n\t\t\tsampleAnimation.classList.remove(\"healthEstimateAnimate\");\n\t\t\tthis.clearKeyframes();\n\t\t}\n\t}\n\n\tclearKeyframes() {\n\t\ttry {\n\t\t\tfor (let i = 0; i <= 6; i++) {\n\t\t\t\tconst index = Math.round(this.gradLength * ((i - 1) / 5));\n\t\t\t\tdocument.documentElement.style.setProperty(`--healthEstimate-keyframe-${index}`, null);\n\t\t\t\tdocument.documentElement.style.setProperty(`--healthEstimate-keyframe-${index}-outline`, null);\n\t\t\t}\n\t\t} catch(err) {\n\t\t\tconsole.error(\"Health Estimate | Error clearing document styles\", err);\n\t\t}\n\t}\n\n\tstatic async reset() {\n\t\tconst paths = [\n\t\t\t\"menuSettings.useColor\",\n\t\t\t\"menuSettings.smoothGradient\",\n\t\t\t\"menuSettings.deadColor\",\n\t\t\t\"menuSettings.fontSize\",\n\t\t\t\"menuSettings.position\",\n\t\t\t\"menuSettings.position2\",\n\t\t\t\"menuSettings.mode\",\n\t\t\t\"menuSettings.outline\",\n\t\t\t\"menuSettings.outlineIntensity\",\n\t\t\t\"menuSettings.scaleToGridSize\",\n\t\t\t\"menuSettings.scaleToZoom\",\n\t\t\t\"variables.colors\",\n\t\t\t\"variables.outline\",\n\t\t\t\"variables.deadColor\",\n\t\t\t\"variables.deadOutline\",\n\t\t];\n\t\tawait Promise.all(paths.map(this.resetToDefault));\n\t\tthis.close();\n\t}\n\n\tasync close(options = {}) {\n\t\tthis.clearKeyframes();\n\t\t// delete this.gp;\n\t\tsuper.close(options);\n\t}\n\n\tstatic async #onSubmit(event, form, formData) {\n\t\tconst settings = foundry.utils.expandObject(formData.object);\n\t\tconst menuSettingsKeys = Object.keys(settings).filter((key) => key.indexOf(\"outline\") === -1);\n\t\tconst updates = menuSettingsKeys.map((key) => sSet(`core.menuSettings.${key}`, settings[key]));\n\t\tawait Promise.all(updates);\n\n\t\tif (!settings.useColor) {\n\t\t\tthis.gradColors = [\"#FFF\"];\n\t\t\tthis.outlColors = [\"#000\"];\n\t\t\tthis.deadOutline = \"#000\";\n\t\t\tsettings.deadColor = \"#FFF\";\n\t\t}\n\t\tconst variableUpdates = [\n\t\t\tsSet(\"core.menuSettings.gradient\", {\n\t\t\t\tcolors: this.gp.handlers.map((a) => a.color),\n\t\t\t\tpositions: this.gp.handlers.map((a) => Math.round(a.position) / 100),\n\t\t\t}),\n\t\t\tsSet(\"core.menuSettings.outline\", settings.outlineMode),\n\t\t\tsSet(\"core.menuSettings.outlineIntensity\", settings.outlineIntensity),\n\t\t\tsSet(\"core.variables.colors\", this.gradColors),\n\t\t\tsSet(\"core.variables.outline\", this.outlColors),\n\t\t\tsSet(\"core.variables.deadColor\", settings.deadColor),\n\t\t\tsSet(\"core.variables.deadOutline\", this.deadOutline),\n\t\t];\n\t\tawait Promise.all(variableUpdates);\n\n\t\tif (game.healthEstimate.alwaysShow) canvas.scene?.tokens.forEach((token) => token.object.refresh());\n\t}\n}\n","import * as forms from \"./forms/_module.js\";\nimport { HealthEstimateHooks } from \"./hooks.js\";\nimport { addMenuSetting, addSetting, f, repositionTooltip, t } from \"./utils.js\";\n\nexport const registerSettings = function () {\n\tgame.settings.registerMenu(\"healthEstimate\", \"behaviorSettings\", {\n\t\tname: t(\"core.menuSettings.behaviorSettings.plural\"),\n\t\tlabel: t(\"core.menuSettings.behaviorSettings.plural\"),\n\t\ticon: \"fas fa-gear\",\n\t\ttype: forms.BehaviorSettings,\n\t\trestricted: true,\n\t});\n\tgame.settings.registerMenu(\"healthEstimate\", \"estimationSettings\", {\n\t\tname: t(\"core.estimationSettings.title\"),\n\t\tlabel: t(\"core.estimationSettings.title\"),\n\t\ticon: \"fas fa-scale-balanced\",\n\t\ttype: forms.EstimationSettings,\n\t\trestricted: true,\n\t});\n\tgame.settings.registerMenu(\"healthEstimate\", \"styleSettings\", {\n\t\tname: t(\"core.menuSettings.styleSettings.plural\"),\n\t\tlabel: t(\"core.menuSettings.styleSettings.plural\"),\n\t\ticon: \"fas fa-palette\",\n\t\ttype: forms.StyleSettings,\n\t\trestricted: true,\n\t});\n\n\t/* Settings for the main settings menu */\n\n\taddSetting(\"core.stateNames\", {\n\t\ttype: String,\n\t\tdefault: \"\",\n\t\tconfig: false,\n\t});\n\taddMenuSetting(\"core.estimations\", {\n\t\ttype: Array,\n\t\tdefault: game.healthEstimate.estimationProvider.estimations,\n\t\tonChange: (value) => {\n\t\t\tgame.healthEstimate.estimations = value;\n\t\t\tcanvas.scene?.tokens.forEach((token) => token.object.refresh());\n\t\t},\n\t});\n\taddSetting(\"core.tooltipPosition\", {\n\t\tconfig: !game.modules.get(\"elevation-module\")?.active,\n\t\ttype: String,\n\t\tdefault: \"default\",\n\t\tchoices: {\n\t\t\tleft: \"healthEstimate.core.tooltipPosition.options.left\",\n\t\t\tdefault: \"healthEstimate.core.tooltipPosition.options.default\",\n\t\t\tright: \"healthEstimate.core.tooltipPosition.options.right\",\n\t\t},\n\t\tonChange: (value) => {\n\t\t\tgame.healthEstimate.tooltipPosition = value;\n\t\t\tcanvas.tokens?.placeables.forEach((token) => repositionTooltip(token, true));\n\t\t},\n\t});\n\n\taddSetting(\"core.outputChat\", {\n\t\thint: f(\"core.outputChat.hint\", { setting: t(\"core.unknownEntity.name\") }),\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t\tonChange: (value) => {\n\t\t\tgame.healthEstimate.outputChat = value;\n\t\t},\n\t});\n\tlet warning = \" \";\n\tif (game.modules.get(\"combat-utility-belt\")?.active) warning += t(\"core.unknownEntity.warningCUB\");\n\telse if (game.modules.get(\"xdy-pf2e-workbench\")?.active) warning += t(\"core.unknownEntity.warningPF2eWorkbench\");\n\taddSetting(\"core.unknownEntity\", {\n\t\ttype: String,\n\t\thint: f(\"core.unknownEntity.hint\", { warning }),\n\t\tdefault: game.i18n.localize(\"healthEstimate.core.unknownEntity.default\"),\n\t});\n\taddSetting(\"core.addTemp\", {\n\t\tconfig: game.healthEstimate.estimationProvider.addTemp,\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t});\n\taddSetting(\"core.breakOnZeroMaxHP\", {\n\t\tconfig: game.healthEstimate.estimationProvider.breakOnZeroMaxHP,\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t});\n\taddSetting(\"core.hideVehicleHP\", {\n\t\tname: \"healthEstimate.PF2E.hideVehicleHP.name\",\n\t\thint: \"healthEstimate.PF2E.hideVehicleHP.hint\",\n\t\tconfig: game.healthEstimate.estimationProvider.vehicleRules.config,\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t});\n\n\t/* Settings for the behavior menu */\n\taddMenuSetting(\"core.alwaysShow\", {\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t\tonChange: (value) => {\n\t\t\tgame.healthEstimate.alwaysShow = value;\n\t\t\tcanvas.tokens?.placeables.forEach((token) =>\n\t\t\t\tgame.healthEstimate._handleOverlay(token, value || game.healthEstimate.showCondition(token.hover))\n\t\t\t);\n\t\t},\n\t});\n\taddMenuSetting(\"core.combatOnly\", {\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t\tonChange: (value) => {\n\t\t\tgame.healthEstimate.combatOnly = value;\n\t\t},\n\t});\n\taddMenuSetting(\"core.showDescription\", {\n\t\ttype: Number,\n\t\tdefault: 0,\n\t\tchoices: {\n\t\t\t0: t(\"core.showDescription.choices.all\"),\n\t\t\t1: t(\"core.showDescription.choices.GM\"),\n\t\t\t2: t(\"core.showDescription.choices.Players\"),\n\t\t},\n\t\tonChange: () => {\n\t\t\tgame.healthEstimate.updateBreakConditions();\n\t\t},\n\t});\n\taddMenuSetting(\"core.showDescriptionTokenType\", {\n\t\ttype: Number,\n\t\tdefault: 0,\n\t\tchoices: {\n\t\t\t0: t(\"core.showDescription.choices.all\"),\n\t\t\t1: t(\"core.showDescription.choices.PC\"),\n\t\t\t2: t(\"core.showDescription.choices.NPC\"),\n\t\t},\n\t\tonChange: () => {\n\t\t\tgame.healthEstimate.updateBreakConditions();\n\t\t},\n\t});\n\n\t/* Settings for the death menu */\n\taddMenuSetting(\"core.deathState\", {\n\t\thint: game.healthEstimate.estimationProvider.deathMarker.config\n\t\t\t? f(\"core.deathState.hint1\", {\n\t\t\t\tsetting: t(\"core.deathStateName.name\"),\n\t\t\t\tsetting2: t(\"core.deathMarker.name\"),\n\t\t\t})\n\t\t\t: f(\"core.deathState.hint2\", { setting: t(\"core.deathStateName.name\") }),\n\t\ttype: Boolean,\n\t\tdefault: game.healthEstimate.estimationProvider.deathState,\n\t\tonChange: (value) => {\n\t\t\tgame.healthEstimate.showDead = value;\n\t\t},\n\t});\n\taddMenuSetting(\"core.deathStateName\", {\n\t\ttype: String,\n\t\tdefault: game.healthEstimate.estimationProvider.deathStateName,\n\t\tonChange: (value) => {\n\t\t\tgame.healthEstimate.deathStateName = value;\n\t\t},\n\t});\n\taddMenuSetting(\"core.NPCsJustDie\", {\n\t\ttype: Boolean,\n\t\thint: f(\"core.NPCsJustDie.hint\", { setting: t(\"core.deathStateName.name\") }),\n\t\tdefault: true,\n\t\tonChange: (value) => {\n\t\t\tgame.healthEstimate.NPCsJustDie = value;\n\t\t},\n\t});\n\taddMenuSetting(\"core.deathMarker\", {\n\t\ttype: String,\n\t\tdefault: game.healthEstimate.estimationProvider.deathMarker.default,\n\t\tonChange: (value) => {\n\t\t\tgame.healthEstimate.deathMarker = value;\n\t\t},\n\t});\n\n\t/* Settings for the custom menu */\n\taddMenuSetting(\"core.menuSettings.useColor\", {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t});\n\taddMenuSetting(\"core.menuSettings.scaleToGridSize\", {\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t\tonChange: (value) => {\n\t\t\tgame.healthEstimate.scaleToGridSize = value;\n\t\t},\n\t});\n\taddMenuSetting(\"core.menuSettings.scaleToZoom\", {\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t\tonChange: (value) => {\n\t\t\tgame.healthEstimate.scaleToZoom = value;\n\t\t\tif (value) Hooks.on(\"canvasPan\", HealthEstimateHooks.onCanvasPan);\n\t\t\telse Hooks.off(\"canvasPan\", HealthEstimateHooks.onCanvasPan);\n\t\t},\n\t});\n\taddMenuSetting(\"core.menuSettings.smoothGradient\", {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t\tonChange: (value) => {\n\t\t\tgame.healthEstimate.smoothGradient = value;\n\t\t},\n\t});\n\taddMenuSetting(\"core.menuSettings.gradient\", {\n\t\ttype: Object,\n\t\tdefault: {\n\t\t\tcolors: [\"#FF0000\", \"#00FF00\"],\n\t\t\tpositions: [0, 1],\n\t\t},\n\t});\n\taddMenuSetting(\"core.menuSettings.mode\", {\n\t\ttype: String,\n\t\tdefault: \"hsl\",\n\t\tchoices: {\n\t\t\tbez: \"Bezier\",\n\t\t\trgb: \"RGB\",\n\t\t\thsl: \"HSL\",\n\t\t\tlch: \"LCH\",\n\t\t},\n\t});\n\taddMenuSetting(\"core.menuSettings.deadColor\", {\n\t\ttype: String,\n\t\tdefault: \"#990000\",\n\t});\n\taddMenuSetting(\"core.menuSettings.outline\", {\n\t\ttype: String,\n\t\tdefault: \"darken\",\n\t\tchoices: {\n\t\t\tdarken: t(\"core.menuSettings.outline.darken\"),\n\t\t\tbrighten: t(\"core.menuSettings.outline.brighten\"),\n\t\t},\n\t\tonChange: (s) => {\n\t\t\tconst color = s === \"darken\" ? \"black\" : \"white\";\n\t\t\tcanvas.tokens?.placeables\n\t\t\t\t.filter((token) => token.healthEstimate)\n\t\t\t\t.forEach((token) => (token.healthEstimate.style.dropShadowColor = color));\n\t\t},\n\t});\n\taddMenuSetting(\"core.menuSettings.outlineIntensity\", {\n\t\ttype: Number,\n\t\tdefault: 3,\n\t});\n\taddMenuSetting(\"core.menuSettings.position2\", {\n\t\ttype: String,\n\t\tdefault: \"a\",\n\t\tchoices: {\n\t\t\ta: t(\"core.menuSettings.position.top\"),\n\t\t\tb: t(\"core.menuSettings.position.middle\"),\n\t\t\tc: t(\"core.menuSettings.position.bottom\"),\n\t\t},\n\t\tonChange: (value) => {\n\t\t\tgame.healthEstimate.position = value;\n\t\t},\n\t});\n\taddMenuSetting(\"core.menuSettings.position\", {\n\t\ttype: Number,\n\t\tdefault: 0,\n\t\tonChange: (value) => {\n\t\t\tgame.healthEstimate.height = value;\n\t\t},\n\t});\n\n\tconst getFonts = () => {\n\t\tconst obj = {};\n\t\tObject.keys(CONFIG.fontDefinitions).forEach((f) => {\n\t\t\tobj[f] = f;\n\t\t});\n\t\tif (!(CONFIG.canvasTextStyle.fontFamily in obj)) {\n\t\t\tobj[CONFIG.canvasTextStyle.fontFamily] = CONFIG.canvasTextStyle.fontFamily;\n\t\t}\n\t\treturn obj;\n\t};\n\taddMenuSetting(\"core.menuSettings.fontFamily\", {\n\t\tname: game.i18n.localize(\"EDITOR.Font\"),\n\t\ttype: String,\n\t\tdefault: CONFIG.canvasTextStyle.fontFamily,\n\t\tchoices: getFonts(),\n\t\tonChange: (value) => {\n\t\t\tgame.healthEstimate.fontFamily = value;\n\t\t\tcanvas.scene?.tokens.forEach((token) => {\n\t\t\t\tif (token.object.healthEstimate) {\n\t\t\t\t\ttoken.object.healthEstimate.style.fontFamily = value;\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t});\n\taddMenuSetting(\"core.menuSettings.fontSize\", {\n\t\ttype: Number,\n\t\tdefault: 24,\n\t\tonChange: (value) => {\n\t\t\tgame.healthEstimate.fontSize = value;\n\t\t\tcanvas.scene?.tokens.forEach((token) => {\n\t\t\t\tif (token.object.healthEstimate) {\n\t\t\t\t\ttoken.object.healthEstimate.style.fontSize = game.healthEstimate.scaledFontSize;\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t});\n\n\t/* Storage for important variables. All following settings are set and read programmatically and do not have associated UI */\n\t/* Default for variables.colors are pre-calculated with chroma.scale(['#F00','#0F0']).mode('hsl').colors(100)                 */\n\t/* Default for variables.outline are pre-calculated by running chroma(color).darken(3) on each color in variables.colors   */\n\taddMenuSetting(\"core.variables.colors\", {\n\t\ttype: Array,\n\t\tdefault: [\n\t\t\t\"#ff0000\",\n\t\t\t\"#ff0500\",\n\t\t\t\"#ff0a00\",\n\t\t\t\"#ff0f00\",\n\t\t\t\"#ff1500\",\n\t\t\t\"#ff1a00\",\n\t\t\t\"#ff1f00\",\n\t\t\t\"#ff2400\",\n\t\t\t\"#ff2900\",\n\t\t\t\"#ff2e00\",\n\t\t\t\"#ff3400\",\n\t\t\t\"#ff3900\",\n\t\t\t\"#ff3e00\",\n\t\t\t\"#ff4300\",\n\t\t\t\"#ff4800\",\n\t\t\t\"#ff4d00\",\n\t\t\t\"#ff5200\",\n\t\t\t\"#ff5800\",\n\t\t\t\"#ff5d00\",\n\t\t\t\"#ff6200\",\n\t\t\t\"#ff6700\",\n\t\t\t\"#ff6c00\",\n\t\t\t\"#ff7100\",\n\t\t\t\"#ff7600\",\n\t\t\t\"#ff7c00\",\n\t\t\t\"#ff8100\",\n\t\t\t\"#ff8600\",\n\t\t\t\"#ff8b00\",\n\t\t\t\"#ff9000\",\n\t\t\t\"#ff9500\",\n\t\t\t\"#ff9b00\",\n\t\t\t\"#ffa000\",\n\t\t\t\"#ffa500\",\n\t\t\t\"#ffaa00\",\n\t\t\t\"#ffaf00\",\n\t\t\t\"#ffb400\",\n\t\t\t\"#ffb900\",\n\t\t\t\"#ffbf00\",\n\t\t\t\"#ffc400\",\n\t\t\t\"#ffc900\",\n\t\t\t\"#ffce00\",\n\t\t\t\"#ffd300\",\n\t\t\t\"#ffd800\",\n\t\t\t\"#ffde00\",\n\t\t\t\"#ffe300\",\n\t\t\t\"#ffe800\",\n\t\t\t\"#ffed00\",\n\t\t\t\"#fff200\",\n\t\t\t\"#fff700\",\n\t\t\t\"#fffc00\",\n\t\t\t\"#fcff00\",\n\t\t\t\"#f7ff00\",\n\t\t\t\"#f2ff00\",\n\t\t\t\"#edff00\",\n\t\t\t\"#e8ff00\",\n\t\t\t\"#e3ff00\",\n\t\t\t\"#deff00\",\n\t\t\t\"#d8ff00\",\n\t\t\t\"#d3ff00\",\n\t\t\t\"#ceff00\",\n\t\t\t\"#c9ff00\",\n\t\t\t\"#c4ff00\",\n\t\t\t\"#bfff00\",\n\t\t\t\"#b9ff00\",\n\t\t\t\"#b4ff00\",\n\t\t\t\"#afff00\",\n\t\t\t\"#aaff00\",\n\t\t\t\"#a5ff00\",\n\t\t\t\"#a0ff00\",\n\t\t\t\"#9bff00\",\n\t\t\t\"#95ff00\",\n\t\t\t\"#90ff00\",\n\t\t\t\"#8bff00\",\n\t\t\t\"#86ff00\",\n\t\t\t\"#81ff00\",\n\t\t\t\"#7cff00\",\n\t\t\t\"#76ff00\",\n\t\t\t\"#71ff00\",\n\t\t\t\"#6cff00\",\n\t\t\t\"#67ff00\",\n\t\t\t\"#62ff00\",\n\t\t\t\"#5dff00\",\n\t\t\t\"#58ff00\",\n\t\t\t\"#52ff00\",\n\t\t\t\"#4dff00\",\n\t\t\t\"#48ff00\",\n\t\t\t\"#43ff00\",\n\t\t\t\"#3eff00\",\n\t\t\t\"#39ff00\",\n\t\t\t\"#34ff00\",\n\t\t\t\"#2eff00\",\n\t\t\t\"#29ff00\",\n\t\t\t\"#24ff00\",\n\t\t\t\"#1fff00\",\n\t\t\t\"#1aff00\",\n\t\t\t\"#15ff00\",\n\t\t\t\"#0fff00\",\n\t\t\t\"#0aff00\",\n\t\t\t\"#05ff00\",\n\t\t\t\"#00ff00\",\n\t\t],\n\t\tonChange: (value) => {\n\t\t\tgame.healthEstimate.colors = value;\n\t\t},\n\t});\n\taddMenuSetting(\"core.variables.outline\", {\n\t\ttype: Array,\n\t\tdefault: [\n\t\t\t\"#5a0000\",\n\t\t\t\"#5a0000\",\n\t\t\t\"#5a0000\",\n\t\t\t\"#5a0000\",\n\t\t\t\"#5a0000\",\n\t\t\t\"#5a0000\",\n\t\t\t\"#5a0000\",\n\t\t\t\"#5a0000\",\n\t\t\t\"#5a0000\",\n\t\t\t\"#5a0000\",\n\t\t\t\"#5a0000\",\n\t\t\t\"#5a0000\",\n\t\t\t\"#5a0000\",\n\t\t\t\"#5a0000\",\n\t\t\t\"#5a0000\",\n\t\t\t\"#5a0000\",\n\t\t\t\"#5b0000\",\n\t\t\t\"#5b0000\",\n\t\t\t\"#5b0000\",\n\t\t\t\"#5b0000\",\n\t\t\t\"#5c0000\",\n\t\t\t\"#5c0000\",\n\t\t\t\"#5c0000\",\n\t\t\t\"#5d0000\",\n\t\t\t\"#5d0000\",\n\t\t\t\"#5e0000\",\n\t\t\t\"#5e0000\",\n\t\t\t\"#5e0000\",\n\t\t\t\"#5f0100\",\n\t\t\t\"#5f0a00\",\n\t\t\t\"#5f1400\",\n\t\t\t\"#601a00\",\n\t\t\t\"#601f00\",\n\t\t\t\"#602500\",\n\t\t\t\"#602900\",\n\t\t\t\"#612e00\",\n\t\t\t\"#613300\",\n\t\t\t\"#613800\",\n\t\t\t\"#613c00\",\n\t\t\t\"#614000\",\n\t\t\t\"#614500\",\n\t\t\t\"#614900\",\n\t\t\t\"#614d00\",\n\t\t\t\"#615200\",\n\t\t\t\"#615600\",\n\t\t\t\"#615a00\",\n\t\t\t\"#615e00\",\n\t\t\t\"#616300\",\n\t\t\t\"#606700\",\n\t\t\t\"#606b00\",\n\t\t\t\"#5d6d00\",\n\t\t\t\"#596d00\",\n\t\t\t\"#556d00\",\n\t\t\t\"#506d00\",\n\t\t\t\"#4c6d00\",\n\t\t\t\"#476d00\",\n\t\t\t\"#426c00\",\n\t\t\t\"#3c6c00\",\n\t\t\t\"#376c00\",\n\t\t\t\"#326c00\",\n\t\t\t\"#2c6c00\",\n\t\t\t\"#256b00\",\n\t\t\t\"#1e6b00\",\n\t\t\t\"#136b00\",\n\t\t\t\"#056b00\",\n\t\t\t\"#006a00\",\n\t\t\t\"#006a00\",\n\t\t\t\"#006a00\",\n\t\t\t\"#006a00\",\n\t\t\t\"#006a00\",\n\t\t\t\"#006900\",\n\t\t\t\"#006900\",\n\t\t\t\"#006900\",\n\t\t\t\"#006900\",\n\t\t\t\"#006800\",\n\t\t\t\"#006800\",\n\t\t\t\"#006800\",\n\t\t\t\"#006800\",\n\t\t\t\"#006800\",\n\t\t\t\"#006700\",\n\t\t\t\"#006700\",\n\t\t\t\"#006700\",\n\t\t\t\"#006700\",\n\t\t\t\"#006700\",\n\t\t\t\"#006700\",\n\t\t\t\"#006600\",\n\t\t\t\"#006600\",\n\t\t\t\"#006600\",\n\t\t\t\"#006600\",\n\t\t\t\"#006600\",\n\t\t\t\"#006600\",\n\t\t\t\"#006600\",\n\t\t\t\"#006600\",\n\t\t\t\"#006600\",\n\t\t\t\"#006600\",\n\t\t\t\"#006600\",\n\t\t\t\"#006600\",\n\t\t\t\"#006600\",\n\t\t\t\"#006600\",\n\t\t\t\"#006600\",\n\t\t],\n\t\tonChange: (value) => {\n\t\t\tgame.healthEstimate.outline = value;\n\t\t},\n\t});\n\taddMenuSetting(\"core.variables.deadColor\", {\n\t\ttype: String,\n\t\tdefault: \"#990000\",\n\t\tonChange: (value) => {\n\t\t\tgame.healthEstimate.deadColor = value;\n\t\t},\n\t});\n\taddMenuSetting(\"core.variables.deadOutline\", {\n\t\ttype: String,\n\t\tdefault: \"#340000\",\n\t\tonChange: (value) => {\n\t\t\tgame.healthEstimate.deadOutline = value;\n\t\t},\n\t});\n};\n","import * as providers from \"./providers/_module.js\";\nimport { providerKeys } from \"./providers/_shared.js\";\nimport { registerSettings } from \"./settings.js\";\nimport { addSetting, isEmpty, sGet, sSet } from \"./utils.js\";\n\nexport class HealthEstimate {\n\tconstructor() {\n\t\t/** Changes which users get to see the overlay. */\n\t\tthis.breakConditions = {\n\t\t\tdefault: \"false\",\n\t\t};\n\t\tthis.actorsCurrentHP = {};\n\t\tthis.lastZoom = null;\n\t}\n\n\t/**\n\t * @type {Number}\n\t */\n\tget gridScale() {\n\t\treturn this.scaleToGridSize ? canvas.scene.dimensions.size / 100 : 1;\n\t}\n\n\t/**\n\t * The module's Estimate Provider.\n\t * @type {EstimationProvider}\n\t */\n\tget provider() {\n\t\treturn this.estimationProvider;\n\t}\n\n\t/**\n\t * The Font Size scaled to the current grid scale and zoom level.\n\t * Multiplies by 4 to increase the resolution.\n\t * @type {Number}\n\t */\n\tget scaledFontSize() {\n\t\treturn ((this.fontSize * this.gridScale) / this.zoomLevel) * 4;\n\t}\n\n\t/**\n\t * The current zoom level. If the Scale to Zoom setting is disabled, always returns 1.\n\t * @type {Number}\n\t */\n\tget zoomLevel() {\n\t\treturn this.scaleToZoom ? Math.min(1, canvas.stage.scale.x) : 1;\n\t}\n\n\t// Hooks\n\n\t/**\n\t * Sets the module's estimation provider, registers settings and updates break conditions.\n\t */\n\tsetup() {\n\t\t// Set the module's provider.\n\t\tconst providerArray = Object.keys(providers);\n\t\tconst supportedSystems = providerArray.join(\"|\").replace(/EstimationProvider/g, \"\");\n\t\tconst systemsRegex = new RegExp(supportedSystems);\n\t\tlet providerString = \"Generic\";\n\t\tif (game.system.id in providerKeys) {\n\t\t\tproviderString = providerKeys[game.system.id] || \"Generic\";\n\t\t} else if (systemsRegex.test(game.system.id)) {\n\t\t\tproviderString = game.system.id;\n\t\t}\n\n\t\t/** @type {EstimateProvider} */\n\t\tthis.estimationProvider = new providers[`${providerString}EstimationProvider`](`native.${providerString}`);\n\n\t\tif (this.estimationProvider.breakCondition !== undefined) {\n\t\t\tthis.breakConditions.system = this.estimationProvider.breakCondition;\n\t\t}\n\t\tif (this.estimationProvider.tokenEffects !== undefined) {\n\t\t\tthis.tokenEffectsPath = this.estimationProvider.tokenEffects;\n\t\t}\n\t\tregisterSettings();\n\t\tfor (let [key, data] of Object.entries(this.estimationProvider.settings)) {\n\t\t\taddSetting(key, data);\n\t\t}\n\t\tthis.updateBreakConditions();\n\t\tthis.updateSettings();\n\t}\n\n\tready() {\n\t\t// Setting change handling\n\t\tif (!Number.isNumeric(this.fontSize)) {\n\t\t\tif (!isNaN(this.fontSize) && this.fontSize.match(/[0-9]*\\.?[0-9]+(px|%)+/i)) {\n\t\t\t\tthis.fontSize = Number(this.fontSize.replace(/(px|%)+/i, \"\"));\n\t\t\t} else {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`Health Estimate | ${game.i18n.format(\"healthEstimate.notifications.invalidFontSize\", {\n\t\t\t\t\t\tfontSize: this.fontSize,\n\t\t\t\t\t})}`\n\t\t\t\t);\n\t\t\t\tthis.fontSize = 24;\n\t\t\t}\n\t\t\tsSet(\"core.menuSettings.fontSize\", this.fontSize || 24);\n\t\t}\n\t\tif (!Number.isNumeric(this.height)) {\n\t\t\tconst heights = {\n\t\t\t\ttop: \"a\",\n\t\t\t\tcenter: \"b\",\n\t\t\t\tend: \"c\",\n\t\t\t};\n\t\t\tthis.position = heights[this.height];\n\t\t\tthis.height = 0;\n\t\t\tsSet(\"core.menuSettings.position\", 0);\n\t\t\tsSet(\"core.menuSettings.position2\", this.position);\n\t\t}\n\t}\n\n\t/**\n\t * @param {Token} token\n\t * @param {Boolean} hovered\n\t */\n\t_handleOverlay(token, hovered) {\n\t\tif (\n\t\t\t!token?.actor\n\t\t\t|| this.breakOverlayRender(token)\n\t\t\t|| (!game.user.isGM && this.hideEstimate(token))\n\t\t\t|| (!token.isVisible && !this.alwaysShow)\n\t\t) return;\n\n\t\t// Create PIXI\n\t\ttry {\n\t\t\tif (hovered) {\n\t\t\t\tconst { desc, color, stroke } = this.getEstimation(token);\n\t\t\t\tif (desc !== undefined && color && stroke) {\n\t\t\t\t\tconst { width } = token.getSize();\n\t\t\t\t\tconst y = -2 + this.height;\n\t\t\t\t\tconst position = { a: 0, b: 1, c: 2 }[this.position];\n\t\t\t\t\tconst x = (width / 2) * position;\n\t\t\t\t\tconst config = { desc, color, stroke, width, x, y };\n\t\t\t\t\tif (!token.healthEstimate?._texture) {\n\t\t\t\t\t\tthis._createHealthEstimate(token, config);\n\t\t\t\t\t} else this._updateHealthEstimate(token, config);\n\t\t\t\t\tif (game.Levels3DPreview?._active) {\n\t\t\t\t\t\tthis._update3DHealthEstimate(token, config);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (token.healthEstimate) {\n\t\t\t\ttoken.healthEstimate.visible = false;\n\t\t\t\tif (game.Levels3DPreview?._active) {\n\t\t\t\t\tconst { tokens } = game.Levels3DPreview;\n\t\t\t\t\tconst token3d = tokens[token.id];\n\t\t\t\t\tif (token3d.healthEstimate) token3d.healthEstimate.visible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch(err) {\n\t\t\tconsole.error(\n\t\t\t\t`Health Estimate | Error on function _handleOverlay(). Token Name: \"${token.name}\". ID: \"${token.id}\". Type: \"${token.document.actor.type}\".`,\n\t\t\t\terr\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @typedef {Object} TextStyle\n\t * @property {Number} fontSize\n\t * @property {String} fontFamily\n\t * @property {String} fill\n\t * @property {String} stroke\n\t * @property {Number} strokeThickness\n\t * @property {Number} padding\n\t * @property {Boolean} dropShadow\n\t * @property {String} dropShadowColor\n\t * @property {String} lineJoin\n\t */\n\n\t/**\n\t * @typedef {Object} EstimateConfig\n\t * @property {String} desc\tThe text to be displayed.\n\t * @property {TextStyle} style\tThe styling rules to be drawn by PIXI.Text.\n\t * @property {Number} x\tThe estimate's x position, based on the token's tooltip position and the module's setting.\n\t * @property {Number} y The estimate's y position, based on the token's tooltip position and the module's setting.\n\t */\n\n\t/**\n\t * Creates an estimate as a PIXI.Text object and adds it to the token.\n\t * @param {Token} token\n\t * @param {EstimateConfig} config\n\t */\n\t_createHealthEstimate(token, config = {}) {\n\t\tconst { desc, color, stroke, width, x, y } = config;\n\t\tconst style = this._getUserTextStyle(color, stroke);\n\t\ttoken.healthEstimate = token.addChild(new PIXI.Text(desc, style));\n\t\ttoken.healthEstimate.scale.set(0.25);\n\t\ttoken.healthEstimate.anchor.set(0.5, 1);\n\t\ttoken.healthEstimate.position.set(width / 2, x + y);\n\t}\n\n\t/**\n\t * Updates an estimate's properties.\n\t * @param {Token} token\n\t * @param {EstimateConfig} config\n\t */\n\t_updateHealthEstimate(token, config = {}) {\n\t\tconst { desc, color, stroke, width, x, y } = config;\n\t\ttoken.healthEstimate.style.fontSize = this.scaledFontSize;\n\t\ttoken.healthEstimate.text = desc;\n\t\ttoken.healthEstimate.style.fill = color;\n\t\ttoken.healthEstimate.style.stroke = stroke;\n\t\ttoken.healthEstimate.visible = true;\n\t\ttoken.healthEstimate.position.set(width / 2, x + y);\n\t}\n\n\t/**\n\t * Caches estimates for the 3D Canvas modules.\n\t * @type {{SpriteMaterial}}\n\t */\n\t_3DCache = {};\n\n\t/**\n\t * Creates an estimate as a 3D object and adds it to the token3d.\n\t * @param {Token} token\n\t * @param {Object} config\n\t */\n\tasync _update3DHealthEstimate(token, config = {}) {\n\t\tconst { tokens, THREE } = game.Levels3DPreview;\n\t\tconst token3d = tokens[token.id];\n\n\t\tconst spriteMaterial = await this._getThreeSpriteMaterial(config);\n\t\tconst sprite = new THREE.Sprite(spriteMaterial);\n\t\tsprite.center.set(0.5, 0.5);\n\n\t\ttoken3d.mesh.remove(token3d.healthEstimate);\n\t\ttoken3d.healthEstimate = sprite;\n\t\ttoken3d.healthEstimate.userData.ignoreIntersect = true;\n\t\ttoken3d.healthEstimate.userData.ignoreHover = true;\n\t\tconst width = spriteMaterial.pixiText.width / token3d.factor;\n\t\tconst height = spriteMaterial.pixiText.height / token3d.factor;\n\t\ttoken3d.healthEstimate.scale.set(width, height, 1);\n\t\ttoken3d.healthEstimate.position.set(0, token3d.d + (height / 2) + 0.042, 0);\n\t\ttoken3d.mesh.add(token3d.healthEstimate);\n\t}\n\n\t/**\n\t * Creates a Sprite based on a PIXI.Text.\n\t * @param {Object} config\n\t * @returns {SpriteMaterial}\n\t */\n\tasync _getThreeSpriteMaterial(config) {\n\t\tconst { desc, color, stroke } = config;\n\t\tif (this._3DCache[desc + color + stroke]) return this._3DCache[desc + color + stroke];\n\t\tconst { THREE } = game.Levels3DPreview;\n\t\tconst style = this._getUserTextStyle(color, stroke);\n\t\tconst text = new PIXI.Text(desc, style);\n\t\tconst container = new PIXI.Container();\n\t\tcontainer.addChild(text);\n\t\tconst base64 = await canvas.app.renderer.extract.base64(container);\n\t\tconst spriteMaterial = new THREE.SpriteMaterial({\n\t\t\tmap: await new THREE.TextureLoader().loadAsync(base64),\n\t\t\ttransparent: true,\n\t\t\talphaTest: 0.1,\n\t\t});\n\t\tspriteMaterial.pixiText = text;\n\t\tthis._3DCache[desc + color + stroke] = spriteMaterial;\n\t\treturn spriteMaterial;\n\t}\n\n\t/**\n\t * Creates a PIXI.TextStyle object.\n\t * @param {String} color\n\t * @param {String} stroke\n\t * @returns {TextStyle}\n\t */\n\t_getUserTextStyle(color, stroke) {\n\t\tconst dropShadowColor = sGet(\"core.menuSettings.outline\") === \"brighten\" ? \"white\" : \"black\";\n\t\treturn {\n\t\t\t// Multiply font size to increase resolution quality\n\t\t\tfontSize: this.scaledFontSize,\n\t\t\tfontFamily: this.fontFamily,\n\t\t\tfill: color,\n\t\t\tstroke,\n\t\t\tstrokeThickness: 12,\n\t\t\tpadding: 5,\n\t\t\tdropShadow: true,\n\t\t\tdropShadowColor,\n\t\t\tlineJoin: \"round\",\n\t\t};\n\t}\n\n\t/**\n\t * Returns an array of estimates related to the token.\n\t * deepClone is used here because changes will reflect locally on the estimations setting (see {@link getEstimation})\n\t * @param {TokenDocument} token\n\t */\n\tgetTokenEstimate(token) {\n\t\tlet special;\n\t\tconst validateEstimation = (iteration, token, estimation) => {\n\t\t\tconst rule = estimation.rule;\n\t\t\ttry {\n\t\t\t\tconst customLogic = this.estimationProvider.customLogic;\n\t\t\t\tconst actor = token?.actor;\n\t\t\t\tconst type = token.actor.type;\n\t\t\t\tconst logic = `${customLogic}\\nreturn ${rule}`;\n\t\t\t\t// eslint-disable-next-line no-new-func\n\t\t\t\treturn new Function(\"actor\", \"token\", \"type\", logic)(actor, token, type);\n\t\t\t} catch(err) {\n\t\t\t\tconst name = estimation.name || iteration;\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`Health Estimate | Estimation Table \"${name}\" has an invalid JS Rule and has been skipped. ${err.name}: ${err.message}`\n\t\t\t\t);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\n\t\tfor (const [iteration, estimation] of this.estimations.entries()) {\n\t\t\tif (estimation.rule === \"default\" || estimation.rule === \"\") continue;\n\t\t\tif (validateEstimation(iteration, token, estimation)) {\n\t\t\t\tif (estimation.ignoreColor) {\n\t\t\t\t\tspecial = estimation;\n\t\t\t\t} else {\n\t\t\t\t\treturn {\n\t\t\t\t\t\testimation: foundry.utils.deepClone(estimation),\n\t\t\t\t\t\tspecial: foundry.utils.deepClone(special)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { estimation: foundry.utils.deepClone(this.estimations[0]), special: foundry.utils.deepClone(special) };\n\t}\n\n\t/**\n\t * Returns the token's estimate's description, color and stroke outline.\n\t * @param {TokenDocument} token\n\t * @returns {{desc: String, color: String, stroke: String}}\n\t */\n\tgetEstimation(token) {\n\t\tlet desc = \"\";\n\t\tlet color = \"\";\n\t\tlet stroke = \"\";\n\t\ttry {\n\t\t\tconst fraction = Number(this.getFraction(token));\n\t\t\tconst { estimate, index } = this.getStage(token, fraction);\n\t\t\tconst isDead = this.isDead(token, estimate.value);\n\n\t\t\tconst colorIndex = this.smoothGradient\n\t\t\t\t? Math.max(0, Math.ceil((this.colors.length - 1) * fraction))\n\t\t\t\t: index;\n\t\t\testimate.label = isDead ? this.deathStateName : estimate.label;\n\t\t\tcolor = isDead ? this.deadColor : this.colors[colorIndex];\n\t\t\tstroke = isDead ? this.deadOutline : this.outline[colorIndex];\n\t\t\tdesc = this.hideEstimate(token) ? `${estimate.label}*` : estimate.label;\n\t\t\treturn { desc, color, stroke };\n\t\t} catch(err) {\n\t\t\tconsole.error(\n\t\t\t\t`Health Estimate | Error on getEstimation(). Token Name: \"${token.name}\". Type: \"${token.document.actor.type}\".`,\n\t\t\t\terr\n\t\t\t);\n\t\t\treturn { desc, color, stroke };\n\t\t}\n\t}\n\n\t/**\n\t * Returns the current health fraction of the token.\n\t * @param {TokenDocument} token\n\t * @returns {Number}\n\t */\n\tgetFraction(token) {\n\t\tconst fraction = Math.max(0, Math.min(this.estimationProvider.fraction(token), 1));\n\t\tif (!Number.isNumeric(fraction)) {\n\t\t\tthrow Error(\"Token's fraction is not valid, it probably doesn't have a numerical HP or Max HP value.\");\n\t\t}\n\t\treturn fraction;\n\t}\n\n\t/**\n\t * @typedef {Object} Estimate\n\t * @property {string} label\n\t * @property {number} value\n\t */\n\n\t/**\n\t * Returns the estimate and its index.\n\t * @param {TokenDocument} token\n\t * @param {Number} fraction\n\t * @returns {{estimate: Estimate, index: number}}\n\t */\n\tgetStage(token, fraction) {\n\t\ttry {\n\t\t\tconst { estimation, special } = this.getTokenEstimate(token);\n\t\t\tfraction *= 100;\n\t\t\t// for cases where 1% > fraction > 0%\n\t\t\tif (fraction !== 0 && Math.floor(fraction) === 0) fraction = 0.1;\n\t\t\telse fraction = Math.trunc(fraction);\n\t\t\tconst logic = (e) => e.value >= fraction;\n\t\t\tconst estimate = special\n\t\t\t\t? special.estimates.find(logic)\n\t\t\t\t: estimation.estimates.find(logic) ?? { value: fraction, label: \"\" };\n\t\t\tconst index = estimation.estimates.findIndex(logic);\n\t\t\treturn { estimate, index };\n\t\t} catch(err) {\n\t\t\tconsole.error(\n\t\t\t\t`Health Estimate | Error on getStage(). Token Name: \"${token.name}\". Type: \"${token.document.actor.type}\".`,\n\t\t\t\terr\n\t\t\t);\n\t\t}\n\t}\n\n\t// Utils\n\n\t/**\n\t * Checks if a Token's or TokenDocument's estimate should be hidden.\n\t * @param {Token|TokenDocument} token\n\t * @returns {Boolean}\n\t */\n\thideEstimate(token) {\n\t\treturn Boolean(\n\t\t\ttoken.document.getFlag(\"healthEstimate\", \"hideHealthEstimate\")\n\t\t\t\t|| token.actor.getFlag(\"healthEstimate\", \"hideHealthEstimate\")\n\t\t);\n\t}\n\n\t/**\n\t * Checks if any combat, linked to the current scene or unlinked, is active.\n\t * @returns {Boolean}\n\t */\n\tisCombatRunning() {\n\t\treturn [...game.combats].some(\n\t\t\t(combat) => combat.started && (combat._source.scene === canvas.scene._id || combat._source.scene == null)\n\t\t);\n\t}\n\n\t/**\n\t * Returns if a token is dead.\n\t * A token is dead if:\n\t * (a) is a NPC at 0 HP and the NPCsJustDie setting is enabled\n\t * (b) has been set as dead in combat (e.g. it has the skull icon, icon may vary from system to system) and the showDead setting is enabled\n\t * (c) has the healthEstimate.dead flag, which is set by a macro.\n\t * @param {Token} token\n\t * @param {Integer} stage\n\t * @returns {Boolean}\n\t */\n\tisDead(token, stage) {\n\t\tconst isOrganicType = this.estimationProvider.organicTypes.includes(token.actor.type);\n\t\tconst isNPCJustDie =\n\t\t\tthis.NPCsJustDie\n\t\t\t&& !token.actor.hasPlayerOwner\n\t\t\t&& stage === 0\n\t\t\t&& !token.document.getFlag(\"healthEstimate\", \"dontMarkDead\");\n\t\tconst isShowDead = this.showDead && this.tokenEffectsPath(token);\n\t\tconst isDefeated = this.showDead && token.combatant?.defeated;\n\t\tconst isFlaggedDead = token.document.getFlag(\"healthEstimate\", \"dead\") || false;\n\n\t\treturn isOrganicType && (isNPCJustDie || isShowDead || isDefeated || isFlaggedDead);\n\t}\n\n\t/**\n\t * Checks if the estimate should be displayed based on the current conditions.\n\t * @param {Boolean} hovered\n\t * @returns {Boolean}\n\t */\n\tshowCondition(hovered) {\n\t\tconst combatTrigger = this.combatOnly && this.combatRunning;\n\t\treturn (\n\t\t\t(this.alwaysShow && (combatTrigger || !this.combatOnly)) || (hovered && (combatTrigger || !this.combatOnly))\n\t\t);\n\t}\n\n\t/**\n\t * Path of the token's effects. Useful for systems that change how it is handled (e.g. PF2e, DSA5, SWADE).\n\t * @returns {Boolean}\n\t */\n\ttokenEffectsPath(token) {\n\t\tconst deadIcon = this.estimationProvider.deathMarker.config\n\t\t\t? this.deathMarker\n\t\t\t: CONFIG.statusEffects.find((x) => x.id === \"dead\")?.img ?? this.deathMarker;\n\t\treturn Array.from(token.actor.effects.values()).some((x) => x.img === deadIcon);\n\t}\n\n\t/**\n\t * Updates the Break Conditions and the Overlay Render's Break Condition method.\n\t * @returns {Boolean}\n\t */\n\tupdateBreakConditions() {\n\t\tthis.breakConditions.onlyGM = sGet(\"core.showDescription\") === 1 ? \"|| !game.user.isGM\" : \"\";\n\t\tthis.breakConditions.onlyNotGM = sGet(\"core.showDescription\") === 2 ? \"|| game.user.isGM\" : \"\";\n\t\tthis.breakConditions.onlyPCs =\n\t\t\tsGet(\"core.showDescriptionTokenType\") === 1 ? \"|| !token.actor?.hasPlayerOwner\" : \"\";\n\t\tthis.breakConditions.onlyNPCs =\n\t\t\tsGet(\"core.showDescriptionTokenType\") === 2 ? \"|| token.actor?.hasPlayerOwner\" : \"\";\n\n\t\tconst prep = (key) => (isEmpty(this.breakConditions[key]) ? \"\" : this.breakConditions[key]);\n\n\t\tthis.breakOverlayRender = (token) => {\n\t\t\ttry {\n\t\t\t\t// eslint-disable-next-line no-new-func\n\t\t\t\treturn new Function(\n\t\t\t\t\t\"token\",\n\t\t\t\t\t`return (\n\t\t\t\t\t\t${prep(\"default\")}\n\t\t\t\t\t\t${prep(\"onlyGM\")}\n\t\t\t\t\t\t${prep(\"onlyNotGM\")}\n\t\t\t\t\t\t${prep(\"onlyNPCs\")}\n\t\t\t\t\t\t${prep(\"onlyPCs\")}\n\t\t\t\t\t\t${prep(\"system\")}\n\t\t\t\t\t)`\n\t\t\t\t)(token);\n\t\t\t} catch(err) {\n\t\t\t\tif (err.name === \"TypeError\") {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`Health Estimate | Error on breakOverlayRender(), skipping. Token Name: \"${token.name}\". Type: \"${token.document.actor.type}\".`,\n\t\t\t\t\t\terr\n\t\t\t\t\t);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Variables for settings to avoid multiple system calls for them, since the estimate can be called really often.\n\t * Updates the variables if any setting was changed.\n\t */\n\tupdateSettings() {\n\t\tthis.descriptions = sGet(\"core.stateNames\").split(/[,;]\\s*/);\n\t\tthis.estimations = sGet(\"core.estimations\");\n\t\tthis.deathStateName = sGet(\"core.deathStateName\");\n\t\tthis.showDead = sGet(\"core.deathState\");\n\t\tthis.NPCsJustDie = sGet(\"core.NPCsJustDie\");\n\t\tthis.deathMarker = sGet(\"core.deathMarker\");\n\t\tthis.scaleToGridSize = sGet(\"core.menuSettings.scaleToGridSize\");\n\t\tthis.scaleToZoom = sGet(\"core.menuSettings.scaleToZoom\");\n\t\tthis.outputChat = sGet(\"core.outputChat\");\n\n\t\tthis.smoothGradient = sGet(\"core.menuSettings.smoothGradient\");\n\n\t\tthis.height = sGet(\"core.menuSettings.position\");\n\t\tthis.position = sGet(\"core.menuSettings.position2\");\n\t\tthis.fontFamily = sGet(\"core.menuSettings.fontFamily\");\n\t\tthis.fontSize = sGet(\"core.menuSettings.fontSize\");\n\n\t\tthis.colors = sGet(\"core.variables.colors\");\n\t\tthis.outline = sGet(\"core.variables.outline\");\n\t\tthis.deadColor = sGet(\"core.variables.deadColor\");\n\t\tthis.deadOutline = sGet(\"core.variables.deadOutline\");\n\n\t\tthis.tooltipPosition = game.modules.get(\"elevation-module\")?.active ? null : sGet(\"core.tooltipPosition\");\n\t}\n}\n","import { HealthEstimateHooks } from \"./hooks.js\";\nimport { HealthEstimate } from \"./logic.js\";\nimport { f, t } from \"./utils.js\";\n\nHooks.once(\"i18nInit\", function () {\n\tsetKeybinds();\n\tgame.healthEstimate = new HealthEstimate();\n});\n\nHooks.once(\"setup\", () => game.healthEstimate.setup());\nHooks.once(\"ready\", () => game.healthEstimate.ready());\n\n// Canvas\nHooks.once(\"canvasReady\", HealthEstimateHooks.onceCanvasReady);\nHooks.on(\"combatStart\", HealthEstimateHooks.onCombatStart);\nHooks.on(\"updateCombat\", HealthEstimateHooks.onUpdateCombat);\nHooks.on(\"deleteCombat\", HealthEstimateHooks.onUpdateCombat);\nHooks.on(\"canvasReady\", HealthEstimateHooks.onCanvasReady);\nHooks.on(\"3DCanvasSceneReady\", () => setTimeout(HealthEstimateHooks.onCanvasReady, 10));\nHooks.on(\"createToken\", HealthEstimateHooks.onCreateToken);\n\n// Actor\nHooks.on(\"updateActor\", HealthEstimateHooks.onUpdateActor);\nHooks.on(\"deleteActor\", HealthEstimateHooks.deleteActor);\nHooks.on(\"deleteActiveEffect\", HealthEstimateHooks.deleteActiveEffect);\n\n// Rendering\nHooks.on(\"renderChatMessage\", HealthEstimateHooks.onRenderChatMessage);\nHooks.on(\"renderSettingsConfig\", HealthEstimateHooks.renderSettingsConfigHandler);\nHooks.on(\"renderTokenConfig\", HealthEstimateHooks.renderTokenConfigHandler);\n\nfunction setKeybinds() {\n\tgame.keybindings.register(\"healthEstimate\", \"markDead\", {\n\t\tname: \"healthEstimate.core.keybinds.markDead.name\",\n\t\thint: \"healthEstimate.core.keybinds.markDead.hint\",\n\t\tonDown: () => {\n\t\t\tif (!canvas.tokens?.controlled) return;\n\t\t\tfor (let e of canvas.tokens.controlled) {\n\t\t\t\tlet hasAlive = !e.document.getFlag(\"healthEstimate\", \"dead\");\n\t\t\t\te.document.setFlag(\"healthEstimate\", \"dead\", hasAlive);\n\t\t\t}\n\t\t},\n\t\trestricted: true,\n\t\tprecedence: CONST.KEYBINDING_PRECEDENCE.NORMAL,\n\t});\n\tgame.keybindings.register(\"healthEstimate\", \"dontMarkDead\", {\n\t\tname: \"healthEstimate.core.keybinds.dontMarkDead.name\",\n\t\thint: f(\"core.keybinds.dontMarkDead.hint\", { setting: t(\"core.NPCsJustDie.name\") }),\n\t\tonDown: () => {\n\t\t\tif (!canvas.tokens?.controlled) return;\n\t\t\tfor (let e of canvas.tokens.controlled) {\n\t\t\t\tlet hasAlive = !e.document.getFlag(\"healthEstimate\", \"dontMarkDead\");\n\t\t\t\te.document.setFlag(\"healthEstimate\", \"dontMarkDead\", hasAlive);\n\t\t\t}\n\t\t},\n\t\trestricted: true,\n\t\tprecedence: CONST.KEYBINDING_PRECEDENCE.NORMAL,\n\t});\n\tgame.keybindings.register(\"healthEstimate\", \"hideEstimates\", {\n\t\tname: \"healthEstimate.core.keybinds.hideEstimates.name\",\n\t\thint: \"healthEstimate.core.keybinds.hideEstimates.hint\",\n\t\tonDown: () => {\n\t\t\tif (!canvas.tokens?.controlled) return;\n\t\t\tfor (let e of canvas.tokens.controlled) {\n\t\t\t\tlet hidden = !e.document.getFlag(\"healthEstimate\", \"hideHealthEstimate\");\n\t\t\t\te.document.setFlag(\"healthEstimate\", \"hideHealthEstimate\", hidden);\n\n\t\t\t\tconst term = hidden\n\t\t\t\t\t? game.i18n.localize(\"healthEstimate.notifications.hidden.singular\")\n\t\t\t\t\t: game.i18n.localize(\"healthEstimate.notifications.shown.singular\");\n\t\t\t\tconst notification = game.i18n.format(\"healthEstimate.notifications.toggleEstimate\", {\n\t\t\t\t\ttokenName: e.actor.name,\n\t\t\t\t\tterm,\n\t\t\t\t});\n\t\t\t\tui.notifications.info(notification, { console: false });\n\t\t\t}\n\t\t},\n\t\trestricted: true,\n\t\tprecedence: CONST.KEYBINDING_PRECEDENCE.NORMAL,\n\t});\n\tgame.keybindings.register(\"healthEstimate\", \"hideNames\", {\n\t\tname: \"healthEstimate.core.keybinds.hideNames.name\",\n\t\thint: f(\"core.keybinds.hideNames.hint\", { setting: t(\"core.outputChat.name\") }),\n\t\tonDown: () => {\n\t\t\tif (!canvas.tokens?.controlled) return;\n\t\t\tfor (let e of canvas.tokens.controlled) {\n\t\t\t\tlet hidden = !e.document.getFlag(\"healthEstimate\", \"hideName\");\n\t\t\t\te.document.setFlag(\"healthEstimate\", \"hideName\", hidden);\n\n\t\t\t\tconst term = hidden\n\t\t\t\t\t? game.i18n.localize(\"healthEstimate.notifications.hidden.singular\")\n\t\t\t\t\t: game.i18n.localize(\"healthEstimate.notifications.shown.singular\");\n\t\t\t\tconst notification = game.i18n.format(\"healthEstimate.notifications.toggleName\", {\n\t\t\t\t\ttokenName: e.actor.name,\n\t\t\t\t\tterm,\n\t\t\t\t});\n\t\t\t\tui.notifications.info(notification, { console: false });\n\t\t\t}\n\t\t},\n\t\trestricted: true,\n\t\tprecedence: CONST.KEYBINDING_PRECEDENCE.NORMAL,\n\t});\n\tgame.keybindings.register(\"healthEstimate\", \"hideEstimatesAndNames\", {\n\t\tname: \"healthEstimate.core.keybinds.hideEstimatesAndNames.name\",\n\t\thint: \"healthEstimate.core.keybinds.hideEstimatesAndNames.hint\",\n\t\tonDown: () => {\n\t\t\tif (!canvas.tokens?.controlled) return;\n\t\t\tfor (let e of canvas.tokens.controlled) {\n\t\t\t\tlet hidden =\n\t\t\t\t\t!e.document.getFlag(\"healthEstimate\", \"hideHealthEstimate\")\n\t\t\t\t\t&& !e.document.getFlag(\"healthEstimate\", \"hideName\");\n\t\t\t\te.document.setFlag(\"healthEstimate\", \"hideHealthEstimate\", hidden);\n\t\t\t\te.document.setFlag(\"healthEstimate\", \"hideName\", hidden);\n\n\t\t\t\tconst term = hidden\n\t\t\t\t\t? game.i18n.localize(\"healthEstimate.notifications.hidden.plural\")\n\t\t\t\t\t: game.i18n.localize(\"healthEstimate.notifications.shown.plural\");\n\t\t\t\tconst notification = game.i18n.format(\"healthEstimate.notifications.toggleEstimateName\", {\n\t\t\t\t\ttokenName: e.actor.name,\n\t\t\t\t\tterm,\n\t\t\t\t});\n\t\t\t\tui.notifications.info(notification, { console: false });\n\t\t\t}\n\t\t},\n\t\trestricted: true,\n\t\tprecedence: CONST.KEYBINDING_PRECEDENCE.NORMAL,\n\t});\n}\n"],"names":["forms.BehaviorSettings","forms.EstimationSettings","forms.StyleSettings"],"mappings":"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,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ,GAAG,SAAS;AACZ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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}